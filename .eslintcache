[{"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\index.js":"1","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\reportWebVitals.js":"2","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\configureStore.js":"3","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\App.js":"4","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\saga\\index.js":"5","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\routes\\setup.js":"6","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\apiKit\\method.js":"7","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\theme\\index.js":"8","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\index.js":"9","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\loader\\index.js":"10","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\saga\\oderManagement.js":"11","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\saga\\userManagement.js":"12","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\saga\\authentication.js":"13","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\saga\\contentManagement.js":"14","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\saga\\needHelpManagement.js":"15","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\saga\\discountManagement.js":"16","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\saga\\quoteManagement.js":"17","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\saga\\homeManagement.js":"18","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\saga\\testimonialManagement.js":"19","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\saga\\faqManagement.js":"20","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\routes\\protectedRoute.js":"21","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\apiKit\\apikit.js":"22","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\routes\\routeConfig.js":"23","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\themes\\constants.js":"24","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\auth\\forgotPassword.jsx":"25","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\auth\\resetPassword.jsx":"26","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\auth\\login.jsx":"27","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\theme\\palette.js":"28","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\theme\\typography.js":"29","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\orderManagement.js":"30","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\userManagement.js":"31","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\contentManagement.js":"32","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\authentication.js":"33","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\appState.js":"34","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\needHelpManagement.js":"35","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\faqManagement.js":"36","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\discountManagement.js":"37","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\quoteManagement.js":"38","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\testimonialManagement.js":"39","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\globalReducer.js":"40","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\homeManagement.js":"41","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\apiKit\\api.js":"42","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\types\\index.js":"43","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\utils\\s3Bucket.js":"44","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\auth\\changePassword.jsx":"45","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\dashboard\\dashboard.jsx":"46","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\dashboard\\testimonialManagement.jsx":"47","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\dashboard\\faqManagement.jsx":"48","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\dashboard\\userManagement.jsx":"49","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\dashboard\\discountManagement.jsx":"50","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\dashboard\\contentManagement.jsx":"51","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\dashboard\\homeManagement.jsx":"52","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\dashboard\\orderListing.jsx":"53","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\themes\\appImages.js":"54","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\utils\\cl.js":"55","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\themes\\regex.js":"56","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\styles\\styles.js":"57","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\themes\\colors.js":"58","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\layouts\\mainLayout.jsx":"59","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\index.js":"60","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\actions\\index.js":"61","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\layouts\\styles.js":"62","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\layouts\\dashboardLayout\\index.js":"63","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\confirmationModal.jsx":"64","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\dropdown.jsx":"65","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\styles.js":"66","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\navbarSearch.jsx":"67","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\navbar.jsx":"68","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\paginationBar.jsx":"69","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\inputField.jsx":"70","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\button.jsx":"71","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\breadcrumbs.jsx":"72","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\appBar.jsx":"73"},{"size":734,"mtime":1691432066000,"results":"74","hashOfConfig":"75"},{"size":362,"mtime":1691432066000,"results":"76","hashOfConfig":"75"},{"size":685,"mtime":1691432066000,"results":"77","hashOfConfig":"75"},{"size":989,"mtime":1691432066000,"results":"78","hashOfConfig":"75"},{"size":1096,"mtime":1691432066000,"results":"79","hashOfConfig":"75"},{"size":1492,"mtime":1691432066000,"results":"80","hashOfConfig":"75"},{"size":2582,"mtime":1691432066000,"results":"81","hashOfConfig":"75"},{"size":1587,"mtime":1691432066000,"results":"82","hashOfConfig":"75"},{"size":1396,"mtime":1691432066000,"results":"83","hashOfConfig":"75"},{"size":597,"mtime":1691432066000,"results":"84","hashOfConfig":"75"},{"size":2377,"mtime":1691432066000,"results":"85","hashOfConfig":"75"},{"size":3815,"mtime":1691432066000,"results":"86","hashOfConfig":"75"},{"size":4992,"mtime":1691432066000,"results":"87","hashOfConfig":"75"},{"size":1584,"mtime":1691432066000,"results":"88","hashOfConfig":"75"},{"size":977,"mtime":1691432066000,"results":"89","hashOfConfig":"75"},{"size":1594,"mtime":1691432066000,"results":"90","hashOfConfig":"75"},{"size":3273,"mtime":1691432066000,"results":"91","hashOfConfig":"75"},{"size":1723,"mtime":1691432066000,"results":"92","hashOfConfig":"75"},{"size":2916,"mtime":1691432066000,"results":"93","hashOfConfig":"75"},{"size":2376,"mtime":1691432066000,"results":"94","hashOfConfig":"75"},{"size":335,"mtime":1691432066000,"results":"95","hashOfConfig":"75"},{"size":393,"mtime":1691432066000,"results":"96","hashOfConfig":"75"},{"size":1404,"mtime":1691432066000,"results":"97","hashOfConfig":"75"},{"size":4069,"mtime":1691432066000,"results":"98","hashOfConfig":"75"},{"size":3850,"mtime":1691432066000,"results":"99","hashOfConfig":"75"},{"size":7271,"mtime":1691432066000,"results":"100","hashOfConfig":"75"},{"size":4597,"mtime":1692299219797,"results":"101","hashOfConfig":"75"},{"size":131,"mtime":1691432066000,"results":"102","hashOfConfig":"75"},{"size":189,"mtime":1691432066000,"results":"103","hashOfConfig":"75"},{"size":637,"mtime":1691432066000,"results":"104","hashOfConfig":"75"},{"size":1553,"mtime":1691432066000,"results":"105","hashOfConfig":"75"},{"size":549,"mtime":1691432066000,"results":"106","hashOfConfig":"75"},{"size":1753,"mtime":1691432066000,"results":"107","hashOfConfig":"75"},{"size":1514,"mtime":1691432066000,"results":"108","hashOfConfig":"75"},{"size":711,"mtime":1691432066000,"results":"109","hashOfConfig":"75"},{"size":627,"mtime":1691432066000,"results":"110","hashOfConfig":"75"},{"size":552,"mtime":1691432066000,"results":"111","hashOfConfig":"75"},{"size":1282,"mtime":1691432066000,"results":"112","hashOfConfig":"75"},{"size":659,"mtime":1691432066000,"results":"113","hashOfConfig":"75"},{"size":356,"mtime":1691432066000,"results":"114","hashOfConfig":"75"},{"size":540,"mtime":1691432066000,"results":"115","hashOfConfig":"75"},{"size":1850,"mtime":1691432066000,"results":"116","hashOfConfig":"75"},{"size":4160,"mtime":1691432066000,"results":"117","hashOfConfig":"75"},{"size":1813,"mtime":1691432066000,"results":"118","hashOfConfig":"75"},{"size":19098,"mtime":1691432066000,"results":"119","hashOfConfig":"75"},{"size":6677,"mtime":1691432066000,"results":"120","hashOfConfig":"75"},{"size":8220,"mtime":1691432066000,"results":"121","hashOfConfig":"75"},{"size":8086,"mtime":1691432066000,"results":"122","hashOfConfig":"75"},{"size":6623,"mtime":1691432066000,"results":"123","hashOfConfig":"75"},{"size":8420,"mtime":1691432066000,"results":"124","hashOfConfig":"75"},{"size":4908,"mtime":1691432066000,"results":"125","hashOfConfig":"75"},{"size":21522,"mtime":1691432066000,"results":"126","hashOfConfig":"75"},{"size":10843,"mtime":1691432066000,"results":"127","hashOfConfig":"75"},{"size":604,"mtime":1691432066000,"results":"128","hashOfConfig":"75"},{"size":172,"mtime":1691432066000,"results":"129","hashOfConfig":"75"},{"size":157,"mtime":1691432066000,"results":"130","hashOfConfig":"75"},{"size":5515,"mtime":1691432066000,"results":"131","hashOfConfig":"75"},{"size":180,"mtime":1691432066000,"results":"132","hashOfConfig":"75"},{"size":709,"mtime":1691432066000,"results":"133","hashOfConfig":"75"},{"size":493,"mtime":1691432066000,"results":"134","hashOfConfig":"75"},{"size":3367,"mtime":1691432066000,"results":"135","hashOfConfig":"75"},{"size":5004,"mtime":1691432066000,"results":"136","hashOfConfig":"75"},{"size":9876,"mtime":1692271506227,"results":"137","hashOfConfig":"75"},{"size":2258,"mtime":1691432066000,"results":"138","hashOfConfig":"75"},{"size":1117,"mtime":1691432066000,"results":"139","hashOfConfig":"75"},{"size":7172,"mtime":1691432066000,"results":"140","hashOfConfig":"75"},{"size":568,"mtime":1691432066000,"results":"141","hashOfConfig":"75"},{"size":859,"mtime":1691432066000,"results":"142","hashOfConfig":"75"},{"size":2201,"mtime":1691432066000,"results":"143","hashOfConfig":"75"},{"size":1173,"mtime":1691432066000,"results":"144","hashOfConfig":"75"},{"size":505,"mtime":1691432066000,"results":"145","hashOfConfig":"75"},{"size":4076,"mtime":1691432066000,"results":"146","hashOfConfig":"75"},{"size":2458,"mtime":1691432066000,"results":"147","hashOfConfig":"75"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},"hatiuq",{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"150"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"150"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"150"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"150"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"150"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"150"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"150"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"150"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"150"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"150"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"150"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"150"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"150"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"150"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"150"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"150"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"150"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"150"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"150"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"150"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"150"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"150"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"150"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"150"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"150"},"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\index.js",[],["321","322"],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\reportWebVitals.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\configureStore.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\App.js",["323"],"\nimport React, { useEffect } from 'react'\nimport Setup from './routes/setup'\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nimport './App.scss'\nimport { ThemeProvider, StylesProvider, jssPreset } from '@material-ui/core/styles'\nimport { create } from 'jss'\nimport extend from 'jss-plugin-extend'\nimport { ToastContainer } from \"react-toastify\";\n\nimport theme from './theme'\nimport { useHistory } from 'react-router-dom';\nimport { getNavigate } from './apiKit/method';\nimport Loader from './customComponents/loader';\n\nconst jss = create({\n  plugins: [...jssPreset().plugins, extend()]\n})\nfunction App() {\n\n  const history = useHistory(\n\n  )\n  useEffect(() => {\n\n    getNavigate(history)\n  }, [])\n\n  return (\n    <>\n      <ToastContainer />\n      <StylesProvider jss={jss}>\n\n        <ThemeProvider theme={theme}>\n          <div className=\"App\">\n            <Setup />\n\n          </div>\n        </ThemeProvider>\n      </StylesProvider>\n      <Loader />\n    </>\n\n  );\n}\n\nexport default App;\n","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\saga\\index.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\routes\\setup.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\apiKit\\method.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\theme\\index.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\index.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\loader\\index.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\saga\\oderManagement.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\saga\\userManagement.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\saga\\authentication.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\saga\\contentManagement.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\saga\\needHelpManagement.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\saga\\discountManagement.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\saga\\quoteManagement.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\saga\\homeManagement.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\saga\\testimonialManagement.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\saga\\faqManagement.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\routes\\protectedRoute.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\apiKit\\apikit.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\routes\\routeConfig.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\themes\\constants.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\auth\\forgotPassword.jsx",["324","325","326","327"],"import React, { useEffect, useState } from 'react'\n// styles\nimport { useStyles } from '../../styles/styles'\nimport './auth.scss'\n// Third party front-end libs\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\n// Third part libs\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Link, useHistory } from 'react-router-dom'\nimport clsx from 'clsx'\n// Custom components\nimport { InputField, Navbar } from '../../customComponents'\nimport MainLayout from '../../layouts/mainLayout'\n// Themes\nimport { AppImages } from '../../themes/appImages'\nimport { ValidationConstants, appConstants } from '../../themes/constants'\n// Icons \nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { forgotPasswordInitiate } from '../../store/actions'\n\n\nexport const ForgotPassword = (props) => {\n\n    const classes = useStyles()\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const loading = useSelector(x => x.authentication.isLoading)\n    console.log(\"load\", loading)\n    // lifecycle hooks\n    useEffect(() => {\n        document.title = appConstants.title\n    }, [])\n\n    const values = {\n        email: '',\n    }\n\n    const validationSchema = Yup.object().shape({\n        email: Yup.string(ValidationConstants.empty.emptyEmail).email(ValidationConstants.invalid.email.invalidEmail).max(255).required(ValidationConstants.empty.emptyEmail),\n    })\n\n    return (\n        <MainLayout>\n            <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\" className=\"m-4 position-relative\">\n                <div className={classes.iconWrapper} onClick={() => history.goBack()} >\n                    <FontAwesomeIcon icon={faArrowLeft} color=\"white\" className={classes.backIcon} />\n                </div>\n                <img src={AppImages.logo} alt=\"logo-image\" className={classes.logo} />\n                <Typography variant=\"h5\" className={clsx([classes.title, \"mb-4\"])}>Forgot Password</Typography>\n                <div className={classes.form}>\n                    <Formik\n                        initialValues={values}\n                        validationSchema={validationSchema}\n                        onSubmit={(values) => {\n                            dispatch(forgotPasswordInitiate(values, history))\n                        }}\n                    >\n                        {({\n                            values,\n                            errors,\n                            handleBlur,\n                            handleChange,\n                            handleSubmit,\n                            isSubmitting,\n                            touched,\n                        }) => (\n                            <form onSubmit={handleSubmit} autoComplete=\"off\">\n                                <InputField\n                                    placeholder=\"Email Address\"\n                                    autoComplete='new-Email'\n                                    error={Boolean(touched.email && errors.email)}\n                                    helperText={touched.email && errors.email}\n                                    name=\"email\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    value={values.email}\n                                    fullWidth\n                                />\n                                <button type=\"submit\" className={clsx([classes.authButton, classes.filledButton, \"mt-4\"])} disabled={loading}>Send</button>\n                            </form>\n                        )}\n                    </Formik>\n                </div>\n            </Grid>\n        </MainLayout>\n    )\n}\n","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\auth\\resetPassword.jsx",["328","329"],"import React, { useEffect } from \"react\";\n// styles\nimport { useStyles } from \"../../styles/styles\";\nimport \"./auth.scss\";\n\n// Third party front-end libs\nimport { Grid, Typography } from \"@material-ui/core\";\n// Third party component libs\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport clsx from \"clsx\";\n// Custom components\nimport { InputField } from \"../../customComponents\";\nimport MainLayout from \"../../layouts/mainLayout\";\n// Themes\nimport { AppImages } from \"../../themes/appImages\";\nimport { appConstants } from \"../../themes/constants\";\n// Redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loginInitiate, resetPasswordInitiate, resetPasswordLinkInitiate } from \"../../store/actions\";\nimport { useLocation } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { passwordRegex } from '../../themes/regex'\nexport const ResetPassword = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const location = useLocation()\n    const linkFetched = useSelector(x => x.authentication.resetPasswordLinkFetched)\n    const linkExpired = useSelector(x => x.authentication.resetPasswordLinkExpired)\n\n    const loading = useSelector(x => x.authentication.isLoading)\n    const token = location.search.split('=')[1]\n\n    const values = {\n        password: \"\",\n        confirmPassword: \"\"\n    };\n\n    useEffect(() => {\n        document.title = appConstants.title\n        dispatch(resetPasswordLinkInitiate({ token }))\n    }, []);\n\n    const validationSchema = Yup.object().shape({\n        password:\n            Yup.string().required(\"Please enter new password.\")\n                .min(8, \"Password should be at least 8 characters long.\")\n                .matches(passwordRegex, \"Password must include 1 upper case letter, 1 lower case letter, 1 numeric value, 1 special character and no spaces.\")\n        ,\n        confirmPassword: Yup.string()\n            .oneOf(\n                [Yup.ref(\"password\"), null],\n                \"Confirm new password must match with new password.\"\n            )\n            .required(\"Please enter confirm new password.\"),\n    });\n\n    return (\n        <MainLayout>\n            {\n                linkFetched ?\n                    (<Grid\n                        container\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        direction=\"column\"\n                        className=\"m-4\"\n                    >\n                        <Link to=\"/\">\n                            <img src={AppImages.logo} alt=\"logo\" className={classes.logo} />\n                        </Link>\n                        <Typography variant=\"h5\" className={`${classes.title} mb-3`}>\n                            Reset Password\n                        </Typography>\n                        <div className={classes.form}>\n                            <Formik\n                                initialValues={values}\n                                validationSchema={validationSchema}\n                                onSubmit={(values) => { dispatch(resetPasswordInitiate({ token, password: values.password }, history)) }}\n                            >\n                                {({\n                                    values,\n                                    errors,\n                                    handleBlur,\n                                    handleChange,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    touched,\n                                }) => (\n                                    <form noValidate onSubmit={handleSubmit}>\n                                        <InputField\n                                            placeholder=\"New Password\"\n                                            error={Boolean(touched.password && errors.password)}\n                                            helperText={touched.password && errors.password}\n                                            name=\"password\"\n                                            onBlur={handleBlur}\n                                            onChange={handleChange}\n                                            type=\"password\"\n                                            value={values.password}\n                                            fullWidth\n                                            my\n                                        />\n                                        <InputField\n                                            placeholder=\"Confirm New Password\"\n                                            error={Boolean(touched.confirmPassword && errors.confirmPassword)}\n                                            helperText={touched.confirmPassword && errors.confirmPassword}\n                                            name=\"confirmPassword\"\n                                            // autoComplete='new-Password'\n                                            onBlur={handleBlur}\n                                            onChange={handleChange}\n                                            type=\"password\"\n                                            value={values.confirmPassword.trim()}\n                                            fullWidth\n                                            my\n                                        />\n\n                                        <button\n                                            type=\"submit\"\n                                            disabled={loading}\n                                            className={clsx([classes.authButton, classes.filledButton])}\n                                        >\n                                            Submit\n                                        </button>\n                                    </form>\n                                )}\n                            </Formik>\n                        </div>\n                    </Grid>)\n                    :\n                    linkExpired ? (<Grid\n                        container\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        direction=\"column\"\n                        className=\"m-4\"\n                    >\n                        <Link to=\"/\">\n                            <img src={AppImages.logo} alt=\"logo\" className={classes.logo} />\n                        </Link>\n                        <Typography variant=\"h5\" className={`${classes.title} mb-3`}>\n                            Link has been expired.\n                        </Typography>\n\n                    </Grid>) : (<Grid\n                        container\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        direction=\"column\"\n                        className=\"m-4\"\n                    >\n                        <Link to=\"/\">\n                            <img src={AppImages.logo} alt=\"logo\" className={classes.logo} />\n                        </Link>\n                        <Typography variant=\"h5\" className={`${classes.title} mb-3`}>\n                        </Typography>\n\n                    </Grid>)\n            }\n        </MainLayout>\n    );\n};\n","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\auth\\login.jsx",["330","331","332","333","334","335","336"],"import React, { useEffect, useState } from \"react\";\n// styles\nimport { useStyles } from \"../../styles/styles\";\nimport \"./auth.scss\";\n\n// Third party front-end libs\nimport { BottomNavigation, Grid, Typography } from \"@material-ui/core\";\n// Third party component libs\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport cl from \"../../utils/cl\";\n// Custom components\nimport { InputField, Navbar } from \"../../customComponents\";\nimport MainLayout from \"../../layouts/mainLayout\";\n// Themes\nimport { AppImages } from \"../../themes/appImages\";\nimport { ValidationConstants, appConstants } from \"../../themes/constants\";\n// Redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { handleClearStateAction, loginInitiate } from \"../../store/actions\";\n\nexport const Login = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const loading = useSelector(x => x.authentication.isLoading)\n\n  const values = {\n    email: \"\",\n    password: \"\",\n  };\n  // lifecycle hooks\n  useEffect(() => {\n    document.title = appConstants.title\n    dispatch(handleClearStateAction());\n  }, []);\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string(ValidationConstants.empty.emptyEmail)\n      .email(ValidationConstants.invalid.email.invalidEmail)\n      .max(255)\n      .required(ValidationConstants.empty.emptyEmail),\n    password: Yup.string().required(\"Please enter password.\"),\n  });\n\n  return (\n    <MainLayout>\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        direction=\"column\"\n        className=\"m-4\"\n      >\n        <img src={AppImages.logo} alt=\"logo-image\" className={classes.logo} />\n        <Typography variant=\"h5\" className={`${classes.title} mb-3`}>\n          Admin Login\n        </Typography>\n        <div className={classes.form}>\n          <Formik\n            initialValues={values}\n            validationSchema={validationSchema}\n            onSubmit={(values) => {\n              // localStorage.setItem(\"token\",\"asdhkahdkjha\")\n              // BottomNavigation.navigate(\"dashboard\")\n               dispatch(loginInitiate(values, history))\n               }}\n          >\n            {({\n              values,\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n            }) => (\n                <form noValidate onSubmit={handleSubmit}>\n                  <InputField\n                    placeholder=\"Email Address\"\n                    // autoComplete='new-Email'\n                    error={Boolean(touched.email && errors.email)}\n                    helperText={touched.email && errors.email}\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"email\"\n                    value={values.email}\n                    fullWidth\n                    my\n                    onKeyDown={(e) => {\n                      if (e.key === \" \") {\n                        e.preventDefault();\n                      }\n                    }}\n\n                  />\n                  <InputField\n                    placeholder=\"Password\"\n                    error={Boolean(touched.password && errors.password)}\n                    helperText={touched.password && errors.password}\n                    name=\"password\"\n                    // autoComplete='new-Password'\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.password.trim()}\n                    fullWidth\n                    my\n                  />\n                  <Grid container justify=\"center\">\n                    <Typography\n                      variant=\"body1\"\n                      display=\"block\"\n                      className={clsx([classes.authButton, classes.linkButton])}\n                      onClick={() => history.push(\"/forgot-password\")}\n                    >\n                      Forgot password?\n                  </Typography>\n                  </Grid>\n                  <button\n                    type=\"submit\"\n                    disabled={loading}\n                    className={clsx([classes.authButton, classes.filledButton])}\n                  >\n                    Login\n                </button>\n                </form>\n              )}\n          </Formik>\n        </div>\n      </Grid>\n    </MainLayout>\n  );\n};\n","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\theme\\palette.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\theme\\typography.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\orderManagement.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\userManagement.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\contentManagement.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\authentication.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\appState.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\needHelpManagement.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\faqManagement.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\discountManagement.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\quoteManagement.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\testimonialManagement.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\globalReducer.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\reducers\\homeManagement.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\apiKit\\api.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\types\\index.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\utils\\s3Bucket.js",["337"],"import AWS from 'aws-sdk';\n\nconst S3_BUCKET = 'familyvibes';\nconst REGION = 'ap-south-1';\n\n\nAWS.config.update({\n    accessKeyId: 'AKIARSRDUAFZ2TZJRAEO',\n    secretAccessKey: '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'\n})\n\nconst myBucket = new AWS.S3({\n    params: { Bucket: S3_BUCKET },\n    region: REGION,\n})\n\n\nvar progress = 0;\nfunction base64ImageToBlob(str) {\n    // extract content type and base64 payload from original string\n    var pos = str.indexOf(';base64,');\n    var type = str.substring(5, pos);\n    var b64 = str.substr(pos + 8);\n\n    // decode base64\n    var imageContent = atob(b64);\n\n    // create an ArrayBuffer and a view (as unsigned 8-bit)\n    var buffer = new ArrayBuffer(imageContent.length);\n    var view = new Uint8Array(buffer);\n\n    // fill the view, using the decoded base64\n    for (var n = 0; n < imageContent.length; n++) {\n        view[n] = imageContent.charCodeAt(n);\n    }\n\n    // convert ArrayBuffer to Blob\n    var blob = new Blob([buffer], { type: type });\n\n    return blob;\n}\nexport const uploadFile = (file, tempName = null) => {\n    const name = `${Date.now()}.${tempName ? tempName : file.name}`\n    const tempFile = tempName ? base64ImageToBlob(file) : file\n    const params = {\n        ACL: 'public-read',\n        Body: tempFile,\n        Bucket: S3_BUCKET,\n        Key: name\n    };\n\n    return new Promise((resolve, reject) => {\n        myBucket.putObject(params)\n            .on('httpUploadProgress', (evt) => {\n                progress = Math.round((evt.loaded / evt.total) * 100)\n            })\n            .send((err, data) => {\n                if (err) {\n                    console.log('########2', err)\n                    reject(null);\n                }\n                resolve(`https://familyvibes.s3.ap-south-1.amazonaws.com/${name}`);\n            })\n    });\n}\n","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\auth\\changePassword.jsx",["338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375"],"// import React, { useState, useEffect, useRef } from 'react';\n// import { useHistory } from 'react-router-dom'\n// import { Table as BSTable, } from 'react-bootstrap';\n\n// // Styles\n// import 'antd/dist/antd.css'\n// // antd\n// import { Card, } from 'react-bootstrap';\n// // Mui Components\n// import { makeStyles } from '@material-ui/core/styles';\n// import Grid from '@material-ui/core/Grid';\n// // Custom components\n// import DashboardLayout from '../../layouts/dashboardLayout'\n// import { AppBar, Navbar, InputField } from '../../customComponents'\n// // Constants\n// import { AppImages } from '../../themes/appImages'\n// import { Colors } from '../../themes/colors'\n// import { appConstants } from '../../themes/constants'\n// // Redux\n// import { useDispatch, useSelector } from 'react-redux'\n// import { Formik } from 'formik';\n// import * as Yup from \"yup\";\n// import { ValidationConstants } from \"../../themes/constants\";\n// import clsx from \"clsx\";\n// // styles\n// import { useStyles } from \"../../styles/styles\";\n// import { changePasswordInitiate } from '../../store/actions';\n// import '../dashboard/dashboard.scss'\n\n// export const ChangePassword = () => {\n//     const classes = useStyles();\n//     const history = useHistory();\n//     const dispatch = useDispatch()\n//     const loading = useSelector(x => x.authentication.isLoading)\n\n\n//     const values = {\n//         oldPassword: \"\",\n//         password: \"\",\n//         confirmPasssword: \"\"\n//     };\n\n//     const validationSchema = Yup.object().shape({\n//         oldPassword: Yup.string().required(\"Please enter old password.\"),\n//         password:\n//             Yup.string().required(\"Please enter new password.\")\n//                 .min(6, \"New password should be at least 8 characters long.\"),\n//         confirmPasssword: Yup.string()\n//             .oneOf(\n//                 [Yup.ref(\"password\"), null],\n//                 \"Confirm new password must match with new password.\"\n//             )\n//             .required(\"Please enter confirm new password.\"),\n//     });\n\n//     useEffect(() => {\n//         document.title = appConstants.title;\n//     }, [])\n\n//     return (\n//         <DashboardLayout>\n//             <AppBar breadcrumbs={[{ route: '/', name: \"dashboard\" }]} />\n//             <Navbar title=\"Change Password\" />\n//             <Card className={classes.card} >\n//                 <Card.Body />\n//             </Card>\n//             <Grid container>\n//                 <Formik\n//                     enableReinitialize={true}\n//                     initialValues={values}\n//                     validationSchema={validationSchema}\n//                     onSubmit={(values) => {\n\n//                         dispatch(changePasswordInitiate({ oldPassword: values.oldPassword, newPassword: values.password }, history))\n//                     }}\n//                 >\n//                     {({\n//                         values,\n//                         errors,\n//                         handleBlur,\n//                         handleChange,\n//                         handleSubmit,\n//                         isSubmitting,\n//                         touched,\n//                     }) => (\n//                         <form onSubmit={handleSubmit} className=\"change-password-form\">\n//                             <BSTable striped bordered>\n//                                 <tbody>\n//                                     <tr>\n//                                         <td className={classes.rowKey}>\n//                                             Old Password\n//                                         </td>\n//                                         <td className={classes.rowValue}>\n//                                             <div className={classes.inputWrapper}>\n\n//                                                 <InputField\n//                                                     placeholder=\"Old Password\"\n//                                                     error={Boolean(touched.oldPassword && errors.oldPassword)}\n//                                                     helperText={touched.oldPassword && errors.oldPassword}\n//                                                     name=\"oldPassword\"\n//                                                     // autoComplete='new-Password'\n//                                                     onBlur={handleBlur}\n//                                                     onChange={handleChange}\n//                                                     type=\"password\"\n//                                                     // value={values.oldPassword.trim()}\n//                                                     fullWidth\n//                                                     my\n//                                                 />\n//                                             </div>\n//                                         </td>\n//                                     </tr>\n//                                     <tr>\n//                                         <td className={classes.rowKey}>New Password</td>\n//                                         <td className={classes.rowValue}>\n//                                             <div className={classes.inputWrapper}>\n//                                                 <InputField\n//                                                     placeholder=\"New Password\"\n//                                                     error={Boolean(touched.password && errors.password)}\n//                                                     helperText={touched.password && errors.password}\n//                                                     name=\"password\"\n//                                                     // autoComplete='new-Password'\n//                                                     onBlur={handleBlur}\n//                                                     onChange={handleChange}\n//                                                     type=\"password\"\n//                                                     // value={values.password.trim()}\n//                                                     fullWidth\n//                                                     my\n//                                                 />\n//                                             </div>\n//                                         </td>\n//                                     </tr>\n//                                     <tr>\n//                                         <td className={classes.rowKey}>Confirm New Password</td>\n//                                         <td className={classes.rowValue}>\n//                                             <div className={classes.inputWrapper}>\n//                                                 <InputField\n//                                                     placeholder=\"Confirm New Password\"\n//                                                     error={Boolean(touched.confirmPasssword && errors.confirmPasssword)}\n//                                                     helperText={touched.confirmPasssword && errors.confirmPasssword}\n//                                                     name=\"confirmPasssword\"\n//                                                     // autoComplete='new-Password'\n//                                                     onBlur={handleBlur}\n//                                                     onChange={handleChange}\n//                                                     type=\"password\"\n//                                                     // value={values.confirmPassword.trim()}\n//                                                     fullWidth\n//                                                     my\n//                                                 />\n//                                             </div>\n//                                         </td>\n//                                     </tr>\n\n//                                     <tr>\n//                                         <td className={classes.rowKey}></td>\n//                                         <td className={classes.rowValue}>\n//                                             <button\n//                                                 type=\"submit\"\n//                                                 disabled={loading}\n//                                                 className={clsx([classes.authButton, classes.filledButton])}\n//                                             >\n//                                                 Submit\n//                                             </button>\n//                                         </td>\n//                                     </tr>\n//                                 </tbody>\n//                             </BSTable>\n//                         </form>\n//                     )}\n//                 </Formik>\n//             </Grid>\n//         </DashboardLayout>\n//     );\n// }\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport moment from 'moment'\n\n// Navigation\nimport { Link as RouterLink, useHistory, useLocation } from 'react-router-dom'\n// Styles\nimport 'antd/dist/antd.css'\nimport '../dashboard/dashboard.scss'\n// Third party Components\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport clsx from \"clsx\";\n\n// antd\nimport { Breadcrumb, Input, Table, Space } from 'antd';\nimport { Card, Container, Row, Col, Table as BSTable, } from 'react-bootstrap';\n// Mui Components\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Drawer, Paper, Grid, CssBaseline, List, Box, Select, Typography, Divider, ListItem, useTheme, Collapse, Breadcrumbs, ListItemText, ListItemIcon } from '@material-ui/core';\n// Custom components\nimport DashboardLayout from '../../layouts/dashboardLayout'\nimport { InputField, Navbar, AppBar, Button } from '../../customComponents'\n// fontAwesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons'\n// Constants\nimport { AppImages } from '../../themes/appImages'\nimport { Colors } from '../../themes/colors'\nimport { ValidationConstants, appConstants } from '../../themes/constants'\nimport { passwordRegex } from '../../themes/regex'\n// utils methods\nimport cl from '../../utils/cl'\nimport { useStyles } from '../../styles/styles'\n// Redux\nimport { useSelector, useDispatch } from 'react-redux'\nimport { changePasswordInitiate, handleNavigationStateAction, userDetailInitiate, userDetailUpdateInitiate } from '../../store/actions'\n// Global constants\n\nexport const ChangePassword = () => {\n    // Hooks declarations\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n    const location = useLocation()\n    const tabItemRef = useRef(null)\n    const dispatch = useDispatch()\n\n\n    const values = {\n        oldPassword: \"\",\n        password: \"\",\n        confirmPasssword: \"\"\n    };\n\n    const validationSchema = Yup.object().shape({\n        oldPassword: Yup.string().required(\"Please enter old password.\")\n            .test(\n                \"trim\",\n                \"Please enter old password.\",\n                (value) => {\n\n                    return value?.trim()?.length > 0\n                }\n            ),\n        password:\n            Yup.string().required(\"Please enter new password.\")\n                .test(\n                    \"trim\",\n                    \"Please enter new password.\",\n                    (value) => {\n                        return value?.trim()?.length > 0\n                    }\n                )\n                .min(8, \"New password should be at least 8 characters long.\")\n                .matches(passwordRegex, \"New password must include 1 upper case letter, 1 lower case letter, 1 numeric value, 1 special character and no spaces.\")\n        ,\n        confirmPasssword: Yup.string()\n            .required(\"Please enter confirm new password.\")\n            .test(\n                \"trim\",\n                \"Please enter confirm new password.\",\n                (value) => {\n\n                    return value?.trim()?.length > 0\n                }\n            )\n            .oneOf(\n                [Yup.ref(\"password\"), null],\n                \"Confirm new password must match with new password.\"\n            )\n    });\n\n    useEffect(() => {\n        document.title = appConstants.title;\n    }, [])\n\n\n    return (\n        <DashboardLayout>\n            <AppBar breadcrumbs={[{ route: '/change-password', name: \"Change Password\" }]} />\n            <Navbar title=\"Change Password\" />\n            <Card className={classes.card}>\n                {/* <Box m={3} /> */}\n                <Grid container>\n                    <Grid smUp={12} className={classes.tableContainerRow}>\n                        <Formik\n                            initialValues={values}\n                            validationSchema={validationSchema}\n                            onSubmit={(values) => {\n\n                                dispatch(changePasswordInitiate({ oldPassword: values.oldPassword, newPassword: values.password }, history))\n                            }}\n                        >\n                            {({\n                                values,\n                                errors,\n                                handleBlur,\n                                handleChange,\n                                handleSubmit,\n                                isSubmitting,\n                                touched,\n                            }) => (\n                                <form onSubmit={handleSubmit}>\n                                    <BSTable striped bordered>\n                                        <tbody>\n                                            <tr>\n                                                <td className={classes.rowKey}>\n                                                    Old Password\n                                                </td>\n                                                <td className={classes.rowValue}>\n                                                    <div className={classes.inputWrapper}>\n                                                        <InputField\n                                                            placeholder=\"Old Password\"\n                                                            error={Boolean(touched.oldPassword && errors.oldPassword)}\n                                                            helperText={touched.oldPassword && errors.oldPassword}\n                                                            name=\"oldPassword\"\n                                                            // autoComplete='new-Password'\n                                                            onBlur={handleBlur}\n                                                            onChange={handleChange}\n                                                            type=\"password\"\n                                                            value={values.oldPassword.trim()}\n                                                            fullWidth\n                                                            my\n                                                        />\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className={classes.rowKey}>New Password</td>\n                                                <td className={classes.rowValue}>\n                                                    <div className={classes.inputWrapper}>\n                                                        <InputField\n                                                            placeholder=\"New Password\"\n                                                            name=\"password\"\n                                                            error={Boolean(touched.password && errors.password)}\n                                                            helperText={touched.password && errors.password}\n                                                            onBlur={handleBlur}\n                                                            onChange={handleChange}\n                                                            type=\"password\"\n                                                            value={values.password.trim()}\n                                                        />\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className={classes.rowKey}>Confirm New Password</td>\n                                                <td className={classes.rowValue}>\n                                                    <div className={classes.inputWrapper}>\n                                                        <InputField\n                                                            placeholder=\"Confirm New Password\"\n                                                            name=\"confirmPasssword\"\n                                                            error={Boolean(touched.confirmPasssword && errors.confirmPasssword)}\n                                                            helperText={touched.confirmPasssword && errors.confirmPasssword}\n                                                            onBlur={handleBlur}\n                                                            onChange={handleChange}\n                                                            type=\"password\"\n                                                            value={values.confirmPasssword.trim()}\n                                                        />\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className={classes.rowKey}></td>\n                                                <td className={classes.rowValue}>\n                                                    <button\n                                                        type=\"submit\"\n                                                        className={clsx([classes.authButton, classes.filledButton])}\n                                                    >\n                                                        Update\n                                                    </button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </BSTable>\n                                </form>\n                            )}\n                        </Formik>\n                    </Grid>\n                </Grid>\n            </Card>\n        </DashboardLayout>\n    );\n}\n","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\dashboard\\dashboard.jsx",["376","377","378","379","380","381","382","383","384","385","386","387"],"import React, { useState, useEffect, useRef } from 'react';\nimport clsx from 'clsx'\nimport { useHistory } from 'react-router-dom'\nimport PeopleAltSharpIcon from '@mui/icons-material/PeopleAltSharp';\nimport InventorySharpIcon from '@mui/icons-material/InventorySharp';\nimport CalendarTodaySharpIcon from '@mui/icons-material/CalendarTodaySharp';\nimport DateRangeSharpIcon from '@mui/icons-material/DateRangeSharp';\nimport CalendarMonthSharpIcon from '@mui/icons-material/CalendarMonthSharp';\nimport EventRepeatSharpIcon from '@mui/icons-material/EventRepeatSharp';\nimport TodaySharpIcon from '@mui/icons-material/TodaySharp';\nimport InsertInvitationSharpIcon from '@mui/icons-material/InsertInvitationSharp';\n// Styles\nimport 'antd/dist/antd.css'\nimport './dashboard.scss'\n// antd\nimport { Card, } from 'react-bootstrap';\n// Mui Components\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n// Custom components\nimport DashboardLayout from '../../layouts/dashboardLayout'\nimport { AppBar, Navbar } from '../../customComponents'\n// Constants\nimport { AppImages } from '../../themes/appImages'\nimport { Colors } from '../../themes/colors'\nimport { appConstants } from '../../themes/constants'\n// utils methods\nimport cl from '../../utils/cl'\n// Redux\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleNavigationStateAction, handleClearStateAction, dashboardInitiate } from '../../store/actions'\n// Global constants\n\n// Custom styles\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        top: -40,\n        position: 'relative',\n        width: '100%',\n        boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.14)',\n        borderRadius: 3,\n        backgroundColor: '#ffffff',\n        marginBottom: 50,\n\n    },\n    leftCard: {\n        [theme.breakpoints.up('sm')]: {\n            paddingRight: 12.5,\n        },\n    },\n    rightCard: {\n        [theme.breakpoints.up('sm')]: {\n            paddingLeft: 15,\n        },\n    },\n    cardLink: {\n        '&:hover $cardTitle': {\n            color: `${Colors.primary} !important`,\n        }\n    },\n    cardImage: {\n        height: \"200px\",\n        width: 200,\n        color: \"#000000\"\n    },\n    cardTitle: {\n        textAlign: 'center',\n        // paddingTop: '5%',\n        // paddingBottom: '5%',\n        fontSize: 14,\n        fontWeight: 'unset',\n        color: '#3c4858 !important',\n        marginTop: '50px',\n        borderTop: \"solid 1px rgba(0, 0, 0, 0.1)\",\n        paddingTop: \"15px\"\n    },\n}));\n\nexport const Dashboard = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch()\n    const dashboardData = useSelector(x => x.userManagement.dashboard)\n\n    const [dashboardState, setDashboardState] = useState([\n        {\n            title: \"Total number of users registered in this week\",\n            icon: PeopleAltSharpIcon,\n            value: 0\n        },\n        {\n            title: \"Total number of users registered in this month\",\n            icon: PeopleAltSharpIcon,\n            value: 0\n        },\n        {\n            title: \"Total number of users registered in this Year\",\n            icon: PeopleAltSharpIcon,\n            value: 0\n        },\n        {\n            title: \"Total number of order placed in this week\",\n            icon: PeopleAltSharpIcon,\n            value: 0\n        },\n        {\n            title: \"Total number of order placed in this month\",\n            icon: PeopleAltSharpIcon,\n            value: 0\n        },\n        {\n            title: \"Total number of order placed in this year\",\n            icon: PeopleAltSharpIcon,\n            value: 0\n        },\n    ])\n\n    useEffect(() => {\n        document.title = appConstants.title;\n        dispatch(handleNavigationStateAction(0, false))\n        dispatch(dashboardInitiate())\n    }, [])\n\n    useEffect(() => {\n\n        setDashboardState([\n            {\n                title: \"Total number of users registered in this week\",\n                icon: PeopleAltSharpIcon,\n                value: dashboardData?.orders?.lastWeek\n            },\n            {\n                title: \"Total number of users registered in this month\",\n                icon: PeopleAltSharpIcon,\n                value: dashboardData?.orders?.lastMonth\n            },\n            {\n                title: \"Total number of users registered in this Year\",\n                icon: PeopleAltSharpIcon,\n                value: dashboardData?.orders?.lastYear\n            },\n            {\n                title: \"Total number of order placed in this week\",\n                icon: PeopleAltSharpIcon,\n                value: dashboardData?.users?.lastWeek\n            },\n            {\n                title: \"Total number of order placed in this month\",\n                icon: PeopleAltSharpIcon,\n                value: dashboardData?.users?.lastMonth\n            },\n            {\n                title: \"Total number of order placed in this year\",\n                icon: PeopleAltSharpIcon,\n                value: dashboardData?.users?.lastYear\n            },\n\n        ])\n    }, [dashboardData])\n\n    return (\n        <DashboardLayout>\n            <AppBar breadcrumbs={[{ route: '/', name: \"Dashboard\" }]} />\n            <Navbar title=\"Dashboard\" />\n            <Card className={classes.card} >\n                <Card.Body />\n            </Card>\n            <Grid container>\n\n                {\n                    dashboardState?.map((i, index) => {\n\n                        return (\n                            <Grid lg={4} sm={6} xs={12} spacing={2} className={classes.leftCard}>\n                                <Card className={clsx([classes.card])}>\n                                    <Card.Body className=\"dashboard-card-body\">\n\n                                        <div className={`card-body-floating-box${index < 4 ? index + 1 : index - 4 + 1}`}>\n                                            {index < 3 ?\n                                                <PeopleAltSharpIcon className=\"dashboard-card-icon\" />\n                                                : <InventorySharpIcon className=\"dashboard-card-icon\" />}\n\n                                        </div>\n\n                                        <div className='dashboard-card-body-value'>{i?.value}</div>\n                                        <Card.Title className={classes.cardTitle}>\n                                            {i.title}\n                                        </Card.Title>\n\n                                    </Card.Body>\n                                </Card>\n                            </Grid>\n                        )\n                    })\n                }\n\n            </Grid>\n        </DashboardLayout>\n    );\n}\n","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\dashboard\\testimonialManagement.jsx",["388","389","390","391","392","393","394"],"import React, { useState, useEffect } from 'react';\nimport moment from 'moment'\n// Navigation\nimport { useHistory } from 'react-router-dom'\n// Styles\nimport 'antd/dist/antd.css'\nimport './dashboard.scss'\n// antd\nimport { Table, Pagination, Modal } from 'antd';\nimport { Grid, useTheme, useMediaQuery, Box } from '@material-ui/core';\n// Custom components\nimport DashboardLayout from '../../layouts/dashboardLayout'\nimport { AppBar, Button, PaginationBar, Navbar, NavbarSearch, InputField } from '../../customComponents'\n// Constants\nimport { appConstants } from '../../themes/constants'\n// utils methods\nimport { useStyles } from '../../styles/styles'\n// Redux\nimport { useSelector, useDispatch } from 'react-redux'\nimport { testimonialAddAction, testimonialDeleteAction, testimonialListInitiate } from '../../store/actions'\nimport { toast } from 'react-toastify';\nimport { Card, Table as BSTable, } from 'react-bootstrap';\nexport const TestimonialManagement = () => {\n\n    const styleProps = { searchable: true }\n    // Hooks declarations\n    const classes = useStyles(styleProps);\n    const theme = useTheme();\n    const history = useHistory();\n    const dispatch = useDispatch()\n    const userList = useSelector(x => x.testimonialManagement.userList)\n    const pagination = useSelector(x => x.testimonialManagement.pagination)\n    const [payload, setPayload] = useState({ offset: 0, limit: 10, sort: \"\", order: 0, search: \"\" })\n    const [currentPage, setCurrentPage] = useState(1)\n    const [showModal, setShowModal] = useState(false)\n    const [imageValue, setImageValue] = useState('');\n    const [feedbackValue, setFeedbackValue] = useState('');\n    const cancelModel = () => setShowModal(false)\n\n\n    const matches = useMediaQuery(theme.breakpoints.down('xs'));\n    // Global state initialization\n    // const {sidebarRouteIndex,sidebarNestedRouteIndex} = appState\n\n    //lifecycle hooks\n    useEffect(() => {\n        document.title = appConstants.title\n        // dispatch(handleNavigationStateAction(1, false))\n        dispatch(testimonialListInitiate(payload))\n    }, [])\n\n    //Callback methods\n    const handleChange = (pagination, filters, sorter) => {\n        const tempPayload = { ...payload, sort: sorter?.columnKey, order: sorter.order === \"ascend\" ? 1 : sorter.order === \"descend\" ? -1 : null, offset: currentPage === 1 ? 0 : (currentPage - 1) * 10 }\n        setPayload(tempPayload)\n        dispatch(testimonialListInitiate(tempPayload))\n    }\n\n    const handlePagination = (pagination) => {\n        setCurrentPage(pagination)\n        const tempPayload = { ...payload, offset: pagination == 1 ? 0 : (pagination - 1) * 10 }\n        setPayload(tempPayload)\n        dispatch(testimonialListInitiate(tempPayload))\n        window.scrollTo(0, 0)\n\n    }\n    const columns = [\n        {\n            title: 'Sr. No.',\n            dataIndex: 'sr',\n            key: 'sr',\n            ellipsis: false,\n            width: \"80px\",\n            render: (key, data, index) => (<>{payload.offset + index + 1}</>),\n        },\n        {\n            title: 'Image',\n            dataIndex: 'media',\n            key: 'media',\n            sorter: true,\n            // width: \"250px\",\n            render: (key, data, index) => (<><img style={{ height: 100, width: 100 }} src={data.media}></img></>),\n        },\n        {\n            title: 'Review',\n            dataIndex: 'text',\n            key: 'text',\n            sorter: true,\n            ellipsis: true,\n            // width: \"250px\",\n            render: (key, data, index) => { return (<><span>{data.text}</span></>) }\n        },\n\n        {\n            title: 'Actions',\n            dataIndex: 'action',\n            key: 'Action',\n            // width: \"300px\",\n            align: 'center',\n            render: (key, data) => {\n                return (\n                    <Grid className={classes.buttons}>\n\n                        <button className=\"table-action-button\" onClick={() => dispatch(testimonialDeleteAction({ id: data._id }, payload))}>\n                            {\"Delete\"}\n                        </button>\n\n                    </Grid>\n                )\n            },\n        }\n    ];\n\n    return (\n        <DashboardLayout>\n            <AppBar breadcrumbs={[{ route: '/testimonial', name: \"Testimonial Management\" }]} />\n            <button className=\"add-category-button\" onClick={() => { setShowModal(true) }}>Add Testimonial</button>\n\n            <Grid container className=\"mt-4\" >\n                <Navbar title=\"Testimonial Management\" />\n                <Card className={classes.card}>\n                    {matches &&\n                        <Box className={classes.searchBox}>\n                            <NavbarSearch />\n                        </Box>\n                    }\n                    <Grid container>\n                        <Grid smUp={12} className={classes.tableContainerRow}>\n                            <Table className={classes.tableWrapper} scroll bordered columns={columns} dataSource={userList} onChange={handleChange} />\n                            <Pagination current={currentPage} total={pagination?.totalCount ? pagination.totalCount : 10} className=\"table-pagination\" onChange={handlePagination} />\n\n                        </Grid>\n                    </Grid>\n                </Card>\n            </Grid>\n            <Modal\n                visible={showModal}\n                title=\"Add Testimonial\"\n                closable={false}\n                onCancel={cancelModel}\n                centered={true}\n                footer={[\n                    <div className=\"delete-category-modal-footer\">\n                        <button onClick={() => {\n                            if (imageValue && feedbackValue) {\n                                dispatch(testimonialAddAction({\n                                    \"media\": imageValue,\n                                    \"text\": feedbackValue\n                                }, payload))\n                                setImageValue('')\n                                setFeedbackValue('')\n                                cancelModel()\n                            }\n                            else {\n                                toast.error('Please fill the form.')\n                            }\n                        }}>Add</button>\n                    </div>\n                ]}\n\n                className=\"delete-category-modal\"\n            >\n                <BSTable striped bordered>\n                    <tbody>\n                        <tr>\n                            <td className={classes.rowKey}>\n                                Select Image\n                            </td>\n                            <td className={classes.rowValue}>\n                                <div className={classes.inputWrapper}>\n                                    <InputField\n                                        placeholder=\"Select Image\"\n                                        name=\"image\"\n                                        onChange={e => setImageValue(e.target.files[0])}\n                                        type=\"file\"\n                                        value={imageValue?.path}\n                                    />\n                                </div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className={classes.rowKey}>\n                                Review Feedback\n                            </td>\n                            <td className={classes.rowValue}>\n                                <div className={classes.inputWrapper}>\n                                    <InputField\n                                        placeholder=\"Review feedback\"\n                                        name=\"feedback\"\n                                        onChange={e => setFeedbackValue(e.target.value)}\n                                        type=\"text\"\n                                        value={feedbackValue}\n                                    />\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </BSTable>\n            </Modal>\n        </DashboardLayout>\n    );\n}\n","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\dashboard\\faqManagement.jsx",["395","396","397","398","399","400"],"import React, { useState, useEffect } from 'react';\nimport moment from 'moment'\n// Navigation\nimport { useHistory } from 'react-router-dom'\n// Styles\nimport 'antd/dist/antd.css'\nimport './dashboard.scss'\n// antd\nimport { Table, Pagination, Modal } from 'antd';\nimport { Grid, useTheme, useMediaQuery, Box } from '@material-ui/core';\n// Custom components\nimport DashboardLayout from '../../layouts/dashboardLayout'\nimport { AppBar, Button, PaginationBar, Navbar, NavbarSearch, InputField } from '../../customComponents'\n// Constants\nimport { appConstants } from '../../themes/constants'\n// utils methods\nimport { useStyles } from '../../styles/styles'\n// Redux\nimport { useSelector, useDispatch } from 'react-redux'\nimport { faqAddAction, faqDeleteAction, faqListInitiate } from '../../store/actions'\nimport { Card, Table as BSTable, } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nexport const FAQManagement = () => {\n\n    const styleProps = { searchable: true }\n    // Hooks declarations\n    const classes = useStyles(styleProps);\n    const theme = useTheme();\n    const history = useHistory();\n    const dispatch = useDispatch()\n    const userList = useSelector(x => x.faqManagement.userList)\n    const pagination = useSelector(x => x.faqManagement.pagination)\n    const [payload, setPayload] = useState({ offset: 0, limit: 10, sort: \"\", order: 0, search: \"\" })\n    const [currentPage, setCurrentPage] = useState(1)\n    const [showModal, setShowModal] = useState(false)\n    const [questionValue, setQuestionValue] = useState('')\n    const [answerValue, setAnswerValue] = useState('')\n    const cancelModel = () => setShowModal(false)\n\n\n    const matches = useMediaQuery(theme.breakpoints.down('xs'));\n    // Global state initialization\n    // const {sidebarRouteIndex,sidebarNestedRouteIndex} = appState\n\n    //lifecycle hooks\n    useEffect(() => {\n        document.title = appConstants.title\n        // dispatch(handleNavigationStateAction(1, false))\n        dispatch(faqListInitiate(payload))\n    }, [])\n\n    //Callback methods\n    const handleChange = (pagination, filters, sorter) => {\n        const tempPayload = { ...payload, sort: sorter?.columnKey, order: sorter.order === \"ascend\" ? 1 : sorter.order === \"descend\" ? -1 : null, offset: currentPage === 1 ? 0 : (currentPage - 1) * 10 }\n        setPayload(tempPayload)\n        dispatch(faqListInitiate(tempPayload))\n    }\n\n    const handlePagination = (pagination) => {\n        setCurrentPage(pagination)\n        const tempPayload = { ...payload, offset: pagination == 1 ? 0 : (pagination - 1) * 10 }\n        setPayload(tempPayload)\n        dispatch(faqListInitiate(tempPayload))\n        window.scrollTo(0, 0)\n\n    }\n    const columns = [\n        {\n            title: 'Sr. No.',\n            dataIndex: 'sr',\n            key: 'sr',\n            ellipsis: false,\n            width: \"80px\",\n            render: (key, data, index) => (<>{payload.offset + index + 1}</>),\n        },\n        {\n            title: 'Question',\n            dataIndex: 'question',\n            key: 'question',\n            sorter: true,\n            ellipsis: false,\n            // width: \"250px\",\n            render: (key, data, index) => { return (<><span>{data.question}</span></>) }\n        },\n        {\n            title: 'Answer',\n            dataIndex: 'answer',\n            key: 'answer',\n            sorter: true,\n            ellipsis: false,\n            // width: \"250px\",\n            render: (key, data, index) => { return (<><span>{data.answer}</span></>) }\n        },\n        {\n            title: 'Actions',\n            dataIndex: 'action',\n            key: 'Action',\n            // width: \"300px\",\n            align: 'center',\n            render: (key, data) => {\n                return (\n                    <Grid className={classes.buttons}>\n\n                        <button className=\"table-action-button\" onClick={() => dispatch(faqDeleteAction({ id: data._id }, payload))}>\n                            {\"Delete\"}\n                        </button>\n\n                    </Grid>\n                )\n            },\n        }\n    ];\n\n    return (\n        <DashboardLayout>\n            <AppBar breadcrumbs={[{ route: '/faq', name: \"FAQ Management\" }]} />\n            <button className=\"add-category-button\" onClick={() => { setShowModal(true) }}>Add FAQ</button>\n\n            <Grid container className=\"mt-4\" >\n                <Navbar title=\"FAQ Management\" />\n                <Card className={classes.card}>\n                    {matches &&\n                        <Box className={classes.searchBox}>\n                            <NavbarSearch />\n                        </Box>\n                    }\n                    <Grid container>\n                        <Grid smUp={12} className={classes.tableContainerRow}>\n                            <Table className={classes.tableWrapper} scroll bordered columns={columns} dataSource={userList} onChange={handleChange} />\n                            <Pagination current={currentPage} total={pagination?.totalCount ? pagination.totalCount : 10} className=\"table-pagination\" onChange={handlePagination} />\n\n                        </Grid>\n                    </Grid>\n                </Card>\n            </Grid>\n            <Modal\n                visible={showModal}\n                title=\"Add FAQ\"\n                closable={false}\n                onCancel={cancelModel}\n                centered={true}\n                footer={[\n                    <div className=\"delete-category-modal-footer\">\n                        <button onClick={() => {\n                            if (questionValue && answerValue) {\n                                dispatch(faqAddAction({\n                                    \"answer\": answerValue,\n                                    \"question\": questionValue\n                                }, payload))\n                                setQuestionValue('')\n                                setAnswerValue('')\n                                cancelModel()\n                            }\n                            else {\n                                toast.error('Please fill the form.')\n                            }\n                        }}>Add</button>\n                    </div>\n                ]}\n\n                className=\"delete-category-modal\"\n            >\n                <BSTable striped bordered>\n                    <tbody>\n                        <tr>\n                            <td className={classes.rowKey}>\n                                Question\n                            </td>\n                            <td className={classes.rowValue}>\n                                <div className={classes.inputWrapper}>\n                                    <InputField\n                                        placeholder=\"Question\"\n                                        name=\"question\"\n                                        onChange={e => setQuestionValue(e.target.value)}\n                                        type=\"text\"\n                                        value={questionValue}\n                                    />\n                                </div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className={classes.rowKey}>\n                                Answer\n                            </td>\n                            <td className={classes.rowValue}>\n                                <div className={classes.inputWrapper}>\n                                    <InputField\n                                        placeholder=\"Answer\"\n                                        name=\"answer\"\n                                        onChange={e => setAnswerValue(e.target.value)}\n                                        type=\"text\"\n                                        value={answerValue}\n                                    />\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </BSTable>\n            </Modal>\n        </DashboardLayout>\n    );\n}\n","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\dashboard\\userManagement.jsx",["401","402","403","404","405","406","407","408"],"import React, { useState, useEffect } from 'react';\nimport moment from 'moment'\n// Navigation\nimport { useHistory } from 'react-router-dom'\n// Styles\nimport 'antd/dist/antd.css'\nimport './dashboard.scss'\n// antd\nimport { Table, Pagination } from 'antd';\nimport { Card, } from 'react-bootstrap';\nimport { Grid, useTheme, useMediaQuery, Box } from '@material-ui/core';\n// Custom components\nimport DashboardLayout from '../../layouts/dashboardLayout'\nimport { AppBar, Button, PaginationBar, Navbar, NavbarSearch } from '../../customComponents'\n// Constants\nimport { appConstants } from '../../themes/constants'\n// utils methods\nimport { useStyles } from '../../styles/styles'\n// Redux\nimport { useSelector, useDispatch } from 'react-redux'\nimport { userBlockInitiate, userListInitiate } from '../../store/actions'\nexport const UserManagement = () => {\n\n    const styleProps = { searchable: true }\n    // Hooks declarations\n    const classes = useStyles(styleProps);\n    const theme = useTheme();\n    const history = useHistory();\n    const dispatch = useDispatch()\n    const userList = useSelector(x => x.userManagement.userList)\n    const pagination = useSelector(x => x.userManagement.pagination)\n    const [payload, setPayload] = useState({ offset: 0, limit: 10, sort: \"\", order: 0, search: \"\" })\n    const [currentPage, setCurrentPage] = useState(1)\n\n\n    const matches = useMediaQuery(theme.breakpoints.down('xs'));\n    // Global state initialization\n    // const {sidebarRouteIndex,sidebarNestedRouteIndex} = appState\n\n    //lifecycle hooks\n    useEffect(() => {\n        document.title = appConstants.title\n        // dispatch(handleNavigationStateAction(1, false))\n        dispatch(userListInitiate(payload))\n    }, [])\n\n    //Callback methods\n    const handleChange = (pagination, filters, sorter) => {\n\n        const tempPayload = { ...payload, sort: sorter?.columnKey, order: sorter.order === \"ascend\" ? 1 : sorter.order === \"descend\" ? -1 : null, offset: currentPage === 1 ? 0 : (currentPage - 1) * 10 }\n        setPayload(tempPayload)\n        dispatch(userListInitiate(tempPayload))\n    }\n\n    const handleSearch = (e) => {\n\n        if (!e.target.value.startsWith(\" \")) {\n\n            const tempPayload = { ...payload, search: e.target.value.trimLeft() }\n            setPayload(tempPayload)\n            dispatch(userListInitiate(tempPayload))\n        }\n        else e.target.value = \"\"\n    }\n\n    const handlePagination = (pagination) => {\n\n\n        setCurrentPage(pagination)\n        const tempPayload = { ...payload, offset: pagination == 1 ? 0 : (pagination - 1) * 10 }\n        setPayload(tempPayload)\n        dispatch(userListInitiate(tempPayload))\n        window.scrollTo(0, 0)\n\n    }\n    const columns = [\n        {\n            title: 'Sr. No.',\n            dataIndex: 'sr',\n            key: 'sr',\n            ellipsis: false,\n            width: \"80px\",\n            render: (key, data, index) => (<>{payload.offset + index + 1}</>),\n        },\n        {\n            title: 'User Id',\n            dataIndex: '_id',\n            key: '_id',\n            sorter: true,\n            ellipsis: true\n        },\n        {\n            title: 'Image',\n            dataIndex: 'picture',\n            key: 'picture',\n            sorter: true,\n            // width: \"250px\",\n            render: (key, data, index) => (<><img style={{ height: 100, width: 100 }} src={data.profile}></img></>),\n        },\n        {\n            title: 'Email Address',\n            dataIndex: 'email',\n            key: 'email',\n            sorter: true,\n            ellipsis: true,\n            // width: \"250px\",\n            render: (key, data, index) => { return (<><span>{data.email}</span></>) }\n        },\n\n\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n            sorter: true,\n            ellipsis: false,\n            ellipsis: true\n\n        },\n        {\n            title: 'Created At',\n            dataIndex: 'createdAt',\n            key: 'createdAt',\n            sorter: true,\n            ellipsis: false,\n            // width: \"180px\",\n            render: (key, data) => (<>{data.createdAt ? moment(data.createdAt).format(\"DD-MM-YYYY\") : \"N/A\"}</>)\n        },\n        // {\n        //     title: 'Actions',\n        //     dataIndex: 'action',\n        //     key: 'Action',\n        //     // width: \"300px\",\n        //     align: 'center',\n        //     render: (key, data) => {\n        //         return (\n        //             <Grid className={classes.buttons}>\n        //                 {/* <button className=\"table-action-button\" onClick={() => history.push({\n        //                     pathname: '/view-user-details',\n        //                     state: data._id\n        //                 })} >\n        //                     View\n        //                 </button>\n\n        //                 <button className=\"table-action-button\" onClick={() => history.push({\n        //                     pathname: '/edit-user',\n        //                     state: data._id\n        //                 })}>\n        //                     Edit\n        //                 </button> */}\n\n        //                 <button className=\"table-action-button\" onClick={() => dispatch(userBlockInitiate({ id: data._id }))}>\n        //                     {data.block ? \"Unblock\" : \"Block\"}\n        //                 </button>\n\n        //             </Grid>\n        //         )\n        //     },\n        // },\n    ];\n    console.log(userList, \"sadad;ald;asd;sa\");\n    return (\n        <DashboardLayout>\n            <AppBar breadcrumbs={[{ route: '/users', name: \"User Management\" }]} />\n            <Grid container className=\"mt-4\" >\n                <Navbar title=\"User Management\" searchable onChange={handleSearch} value={payload.search}\n\n                />\n                <Card className={classes.card}>\n                    {matches &&\n                        <Box className={classes.searchBox}>\n                            <NavbarSearch />\n                        </Box>\n                    }\n                    <Grid container>\n                        <Grid smUp={12} className={classes.tableContainerRow}>\n                            <Table className={classes.tableWrapper} scroll bordered columns={columns} dataSource={userList} onChange={handleChange} />\n                            <Pagination current={currentPage} total={pagination?.totalCount ? pagination.totalCount : 10} className=\"table-pagination\" onChange={handlePagination} />\n\n                        </Grid>\n                    </Grid>\n                </Card>\n            </Grid>\n        </DashboardLayout>\n    );\n}\n","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\dashboard\\discountManagement.jsx",["409"],"import React, { useEffect } from 'react';\nimport 'antd/dist/antd.css'\nimport './dashboard.scss'\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport clsx from \"clsx\";\nimport { Card, Table as BSTable, } from 'react-bootstrap';\nimport { Grid } from '@material-ui/core';\nimport DashboardLayout from '../../layouts/dashboardLayout'\nimport { InputField, Navbar, AppBar } from '../../customComponents'\nimport { appConstants } from '../../themes/constants'\nimport { useStyles } from '../../styles/styles'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DiscountUpdateAction, getDiscountAction } from '../../store/actions';\nimport { toast } from 'react-toastify';\n\nexport const DiscountManagement = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch()\n  const data = useSelector(state => state.discountManagement.data);\n\n  const validationSchema = Yup.object().shape({\n    freeDeliveryPrice: Yup.number().required('Please enter minimum price for free delivery.'),\n    shippingCharge: Yup.number().required('Please enter shipping price.'),\n    framePrice: Yup.number().required('Please enter single frame price.'),\n  })\n\n  // Lifecycle Hooks\n  useEffect(() => {\n    document.title = appConstants.title\n    dispatch(getDiscountAction());\n  }, [])\n\n\n\n  return (\n    <DashboardLayout>\n      <AppBar breadcrumbs={[{ route: '/discount', name: \"Discount & Offers Management\" }]} />\n      <Navbar title=\"Discount & Offers Management\" />\n      <Card className={classes.card}>\n        {/* <Box m={3} /> */}\n        <Grid container>\n          <Grid smUp={12} className={classes.tableContainerRow}>\n            <Formik\n              enableReinitialize={true}\n              initialValues={{\n                freeDeliveryPrice: data?.freeDeliveryPrice,\n                shippingCharge: data?.shippingCharge,\n                framePrice: data?.framePrice,\n                siteOfferPrice: data?.siteOfferPrice,\n                siteOfferDiscount: data?.siteOfferDiscount\n              }}\n              validationSchema={validationSchema}\n              onSubmit={(values) => {\n                if ((values.siteOfferPrice || values.siteOfferDiscount)) {\n                  if (values.siteOfferPrice && values.siteOfferDiscount) {\n                    dispatch(DiscountUpdateAction(values))\n                  }\n                  else {\n                    return toast.error(\"Please enter Site offer price and Discount both or make both zero.\", { toastId: \"err\" });\n                  }\n                }\n                dispatch(DiscountUpdateAction(values))\n              }}\n            >\n              {({\n                values,\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isSubmitting,\n                touched,\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  <BSTable striped bordered>\n                    <tbody>\n                      <tr>\n                        <td className={classes.rowKey}>\n                          Free Delivery Price\n                        </td>\n                        <td className={classes.rowValue}>\n                          <div className={classes.inputWrapper}>\n                            <InputField\n                              placeholder=\"Free Delivery Price\"\n                              name=\"freeDeliveryPrice\"\n                              error={Boolean(touched.freeDeliveryPrice && errors.freeDeliveryPrice)}\n                              helperText={touched.freeDeliveryPrice && errors.freeDeliveryPrice}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              type=\"number\"\n                              value={values.freeDeliveryPrice}\n                            />\n                          </div>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <td className={classes.rowKey}>\n                          Shipping Price\n                        </td>\n                        <td className={classes.rowValue}>\n                          <div className={classes.inputWrapper}>\n                            <InputField\n                              placeholder=\"Shipping Price\"\n                              name=\"shippingCharge\"\n                              error={Boolean(touched.shippingCharge && errors.shippingCharge)}\n                              helperText={touched.shippingCharge && errors.shippingCharge}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              type=\"number\"\n                              value={values.shippingCharge}\n                            />\n                          </div>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <td className={classes.rowKey}>\n                          Single Frame Price\n                        </td>\n                        <td className={classes.rowValue}>\n                          <div className={classes.inputWrapper}>\n                            <InputField\n                              placeholder=\"Single Frame Price\"\n                              name=\"framePrice\"\n                              error={Boolean(touched.framePrice && errors.framePrice)}\n                              helperText={touched.framePrice && errors.framePrice}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              type=\"number\"\n                              value={values.framePrice}\n                            />\n                          </div>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <td className={classes.rowKey}>\n                          Site Offer Minimunm Price\n                        </td>\n                        <td className={classes.rowValue}>\n                          <div className={classes.inputWrapper}>\n                            <InputField\n                              placeholder=\"Site Offer Price\"\n                              name=\"siteOfferPrice\"\n                              error={Boolean(touched.siteOfferPrice && errors.siteOfferPrice)}\n                              helperText={touched.siteOfferPrice && errors.siteOfferPrice}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              type=\"number\"\n                              value={values.siteOfferPrice}\n                            />\n                          </div>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <td className={classes.rowKey}>\n                          {'Site Offer Discount(in %)'}\n                        </td>\n                        <td className={classes.rowValue}>\n                          <div className={classes.inputWrapper}>\n                            <InputField\n                              placeholder=\"Site Offer Discount (in %)\"\n                              name=\"siteOfferDiscount\"\n                              error={Boolean(touched.siteOfferDiscount && errors.siteOfferDiscount)}\n                              helperText={touched.siteOfferDiscount && errors.siteOfferDiscount}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              type=\"number\"\n                              value={values.siteOfferDiscount}\n                            />\n                          </div>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <td className={classes.rowKey}></td>\n                        <td className={classes.rowValue}>\n                          <button\n                            type=\"submit\"\n                            className={clsx([classes.authButton, classes.filledButton])}\n                          >\n                            Submit\n                          </button>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </BSTable>\n                </form>\n              )}\n            </Formik>\n\n          </Grid>\n        </Grid>\n      </Card>\n    </DashboardLayout>\n  );\n}\n","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\dashboard\\contentManagement.jsx",["410"],"import React, { useEffect } from 'react';\nimport 'antd/dist/antd.css'\nimport './dashboard.scss'\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport clsx from \"clsx\";\nimport { Card, Table as BSTable, } from 'react-bootstrap';\nimport { Grid } from '@material-ui/core';\nimport DashboardLayout from '../../layouts/dashboardLayout'\nimport { InputField, Navbar, AppBar } from '../../customComponents'\nimport { appConstants } from '../../themes/constants'\nimport { useStyles } from '../../styles/styles'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ContentUpdateAction, getContentAction } from '../../store/actions';\n\nexport const ContentManagement = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch()\n  const data = useSelector(state => state.contentManagement.data);\n\n  const validationSchema = Yup.object().shape({\n    privacy: Yup.string()\n      .required('Please enter Privacy policy.')\n      .min(5, 'Privacy policy must be 500 characters long.'),\n    term: Yup.string()\n      .required('Please enter Terms and Condition.')\n      .min(500, 'Terms and Condition must be 500 characters long.'),\n  })\n\n  // Lifecycle Hooks\n  useEffect(() => {\n    document.title = appConstants.title\n    dispatch(getContentAction());\n  }, [])\n\n\n\n  return (\n    <DashboardLayout>\n      <AppBar breadcrumbs={[{ route: '/content', name: \"Content Management\" }]} />\n      <Navbar title=\"ContentManagement\" />\n      <Card className={classes.card}>\n        {/* <Box m={3} /> */}\n        <Grid container>\n          <Grid smUp={12} className={classes.tableContainerRow}>\n            <Formik\n              enableReinitialize={true}\n              initialValues={{ privacy: data?.privacy, term: data?.term }}\n              validationSchema={validationSchema}\n              onSubmit={(values) => {\n                dispatch(ContentUpdateAction(values))\n              }}\n            >\n              {({\n                values,\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isSubmitting,\n                touched,\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  <BSTable striped bordered>\n                    <tbody>\n                      <tr>\n                        <td className={classes.rowKey}>\n                          Privacy policy\n                        </td>\n                        <td className={classes.rowValue}>\n                          <div className={classes.inputWrapper}>\n                            <InputField\n                              placeholder=\"Privacy policy\"\n                              name=\"privacy\"\n                              error={Boolean(touched.privacy && errors.privacy)}\n                              helperText={touched.privacy && errors.privacy}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              type=\"text\"\n                              value={values.privacy}\n                              style={{ width: '50vw' }}\n                              textArea\n                            />\n                          </div>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td className={classes.rowKey}>\n                          Terms and Condition\n                        </td>\n                        <td className={classes.rowValue}>\n                          <div className={classes.inputWrapper}>\n                            <InputField\n                              placeholder=\"Terms and Condition\"\n                              name=\"term\"\n                              error={Boolean(touched.term && errors.term)}\n                              helperText={touched.term && errors.term}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              type=\"text\"\n                              value={values.term}\n                              style={{ width: '50vw' }}\n                              textArea\n                            />\n                          </div>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <td className={classes.rowKey}></td>\n                        <td className={classes.rowValue}>\n                          <button\n                            type=\"submit\"\n                            className={clsx([classes.authButton, classes.filledButton])}\n                          >\n                            Submit\n                          </button>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </BSTable>\n                </form>\n              )}\n            </Formik>\n\n          </Grid>\n        </Grid>\n      </Card>\n    </DashboardLayout>\n  );\n}\n","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\dashboard\\homeManagement.jsx",["411","412","413","414"],"import React, { useEffect, useState } from 'react';\nimport 'antd/dist/antd.css'\nimport './dashboard.scss'\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport clsx from \"clsx\";\nimport { Card, Table as BSTable, } from 'react-bootstrap';\nimport { Grid } from '@material-ui/core';\nimport DashboardLayout from '../../layouts/dashboardLayout'\nimport { InputField, Navbar, AppBar } from '../../customComponents'\nimport { appConstants } from '../../themes/constants'\nimport { useStyles } from '../../styles/styles'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { HomeUpdateAction, getHomeAction, globalLoader } from '../../store/actions';\nimport { uploadFile } from \"../../utils/s3Bucket\";\n\nexport const HomeManagement = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch()\n  const [imageValue, setImageValue] = useState('');\n  const [imageValue2, setImageValue2] = useState('');\n  const [imageValue3, setImageValue3] = useState('');\n  const data = useSelector(state => state.homeManagement.data);\n\n  const validationSchema = Yup.object().shape({\n    instragram: Yup.string().required('Please enter instagram social link.'),\n    facebook: Yup.string().required('Please enter facebook social link.'),\n    youTube: Yup.string().required('Please enter youtube social link.'),\n    pinterest: Yup.string().required('Please enter pinterest social link.'),\n    secondContentTitle: Yup.string().required('Please enter second box title.'),\n    secondContentDesc: Yup.string().required('Please enter second box description.'),\n    firstContentTitle: Yup.string().required('Please enter first box title.'),\n    firstContentDesc: Yup.string().required('Please enter first title.'),\n    firstContentYoutube1: Yup.string().required('Please enter first box youtube link 1.'),\n    firstContentYoutube2: Yup.string().required('Please enter first box youtube link 2.'),\n    firstContentYoutube3: Yup.string().required('Please enter first box youtube link 3.'),\n    firstContentYoutube4: Yup.string().required('Please enter first box youtube link 4.'),\n  })\n\n  // Lifecycle Hooks\n  useEffect(() => {\n    document.title = appConstants.title\n    dispatch(getHomeAction());\n  }, [])\n\n\n\n  return (\n    <DashboardLayout>\n      <AppBar breadcrumbs={[{ route: '/home', name: \"Home Management\" }]} />\n      <Navbar title=\"Home Management\" />\n      <Card className={classes.card}>\n        {/* <Box m={3} /> */}\n        <Grid container>\n          <Grid smUp={12} className={classes.tableContainerRow}>\n            <Formik\n              enableReinitialize={true}\n              initialValues={{\n                instragram: data?.instragram,\n                facebook: data?.facebook,\n                youTube: data?.youTube,\n                pinterest: data?.pinterest,\n                secondContentTitle: data?.secondContent?.title,\n                secondContentDesc: data?.secondContent?.description,\n                firstContentTitle: data?.firstContent?.title,\n                firstContentDesc: data?.firstContent?.description,\n                firstContentYoutube1: data?.firstContent?.links[0],\n                firstContentYoutube2: data?.firstContent?.links[1],\n                firstContentYoutube3: data?.firstContent?.links[2],\n                firstContentYoutube4: data?.firstContent?.links[3],\n              }}\n              validationSchema={validationSchema}\n              onSubmit={async (values) => {\n                dispatch(globalLoader(true));\n                const imgUrls = {\n                  image1: data?.secondContent?.links[0],\n                  image2: data?.secondContent?.links[1],\n                  image3: data?.secondContent?.links[2]\n                }\n                if (imageValue) {\n                  imgUrls.image1 = await uploadFile(imageValue)\n\n                }\n                if (imageValue2) {\n                  imgUrls.image2 = await uploadFile(imageValue2)\n                }\n                if (imageValue3) {\n                  imgUrls.image3 = await uploadFile(imageValue3)\n                }\n                const tempData = {\n                  \"instragram\": values?.instragram,\n                  \"twitter\": values?.instragram,\n                  \"facebook\": values?.facebook,\n                  \"pinterest\": values?.pinterest,\n                  \"youTube\": values?.youTube,\n                  \"secondContent\": {\n                    \"description\": values?.secondContentDesc,\n                    \"title\": values?.secondContentTitle,\n                    \"links\": [\n                      imgUrls.image1,\n                      imgUrls.image2,\n                      imgUrls.image3\n                    ]\n                  },\n                  \"firstContent\": {\n                    \"description\": values?.firstContentDesc,\n                    \"title\": values?.firstContentTitle,\n                    \"links\": [\n                      values?.firstContentYoutube1,\n                      values?.firstContentYoutube2,\n                      values?.firstContentYoutube3,\n                      values?.firstContentYoutube4\n                    ]\n                  }\n                }\n\n                dispatch(HomeUpdateAction(tempData))\n              }}\n            >\n              {({\n                values,\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isSubmitting,\n                touched,\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  <BSTable striped bordered>\n                    <tbody>\n                      <tr>\n                        <td className={classes.rowKey}>\n                          Instragram Link\n                        </td>\n                        <td className={classes.rowValue}>\n                          <div className={classes.inputWrapper}>\n                            <InputField\n                              placeholder=\"Instragram Link\"\n                              name=\"instragram\"\n                              error={Boolean(touched.instragram && errors.instragram)}\n                              helperText={touched.instragram && errors.instragram}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              type=\"text\"\n                              value={values.instragram}\n                              style={{ width: '50vw' }}\n                            />\n                          </div>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <td className={classes.rowKey}>\n                          Facebook Link\n                        </td>\n                        <td className={classes.rowValue}>\n                          <div className={classes.inputWrapper}>\n                            <InputField\n                              placeholder=\"Facebook Link\"\n                              name=\"facebook\"\n                              error={Boolean(touched.facebook && errors.facebook)}\n                              helperText={touched.facebook && errors.facebook}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              type=\"text\"\n                              style={{ width: '50vw' }}\n                              value={values.facebook}\n                            />\n                          </div>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <td className={classes.rowKey}>\n                          Youtube Link\n                        </td>\n                        <td className={classes.rowValue}>\n                          <div className={classes.inputWrapper}>\n                            <InputField\n                              placeholder=\"Youtube Link\"\n                              name=\"youTube\"\n                              error={Boolean(touched.youTube && errors.youTube)}\n                              helperText={touched.youTube && errors.youTube}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              type=\"text\"\n                              style={{ width: '50vw' }}\n                              value={values.youTube}\n                            />\n                          </div>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <td className={classes.rowKey}>\n                          Pinterest Link\n                        </td>\n                        <td className={classes.rowValue}>\n                          <div className={classes.inputWrapper}>\n                            <InputField\n                              placeholder=\"Pinterest Link\"\n                              name=\"pinterest\"\n                              error={Boolean(touched.pinterest && errors.pinterest)}\n                              helperText={touched.pinterest && errors.pinterest}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              type=\"text\"\n                              style={{ width: '50vw' }}\n                              value={values.pinterest}\n                            />\n                          </div>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <td className={classes.rowKey}>\n                          First Box Title\n                        </td>\n                        <td className={classes.rowValue}>\n                          <div className={classes.inputWrapper}>\n                            <InputField\n                              placeholder=\"First Box Title\"\n                              name=\"firstContentTitle\"\n                              error={Boolean(touched.firstContentTitle && errors.firstContentTitle)}\n                              helperText={touched.firstContentTitle && errors.firstContentTitle}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              type=\"text\"\n                              style={{ width: '50vw' }}\n                              value={values.firstContentTitle}\n                            />\n                          </div>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <td className={classes.rowKey}>\n                          First Box Description\n                        </td>\n                        <td className={classes.rowValue}>\n                          <div className={classes.inputWrapper}>\n                            <InputField\n                              placeholder=\"First Box Description\"\n                              name=\"firstContentDesc\"\n                              error={Boolean(touched.firstContentDesc && errors.firstContentDesc)}\n                              helperText={touched.firstContentDesc && errors.firstContentDesc}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              type=\"text\"\n                              style={{ width: '50vw' }}\n                              value={values.firstContentDesc}\n                              textArea\n                            />\n                          </div>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <td className={classes.rowKey}>\n                          First Box Youtube Link 1\n                        </td>\n                        <td className={classes.rowValue}>\n                          <div className={classes.inputWrapper}>\n                            <InputField\n                              placeholder=\"First Box Youtube Link 1\"\n                              name=\"firstContentYoutube1\"\n                              error={Boolean(touched.firstContentYoutube1 && errors.firstContentYoutube1)}\n                              helperText={touched.firstContentYoutube1 && errors.firstContentYoutube1}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              type=\"text\"\n                              value={values.firstContentYoutube1}\n                              style={{ width: '50vw' }}\n                            />\n                          </div>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <td className={classes.rowKey}>\n                          First Box Youtube Link 2\n                        </td>\n                        <td className={classes.rowValue}>\n                          <div className={classes.inputWrapper}>\n                            <InputField\n                              style={{ width: '50vw' }}\n                              placeholder=\"First Box Youtube Link 2\"\n                              name=\"firstContentYoutube2\"\n                              error={Boolean(touched.firstContentYoutube2 && errors.firstContentYoutube2)}\n                              helperText={touched.firstContentYoutube2 && errors.firstContentYoutube2}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              type=\"text\"\n                              value={values.firstContentYoutube2}\n                            />\n                          </div>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <td className={classes.rowKey}>\n                          First Box Youtube Link 3\n                        </td>\n                        <td className={classes.rowValue}>\n                          <div className={classes.inputWrapper}>\n                            <InputField\n                              placeholder=\"First Box Youtube Link 3\"\n                              name=\"firstContentYoutube3\"\n                              error={Boolean(touched.firstContentYoutube3 && errors.firstContentYoutube3)}\n                              helperText={touched.firstContentYoutube3 && errors.firstContentYoutube3}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              style={{ width: '50vw' }}\n                              type=\"text\"\n                              value={values.firstContentYoutube3}\n                            />\n                          </div>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <td className={classes.rowKey}>\n                          First Box Youtube Link 4\n                        </td>\n                        <td className={classes.rowValue}>\n                          <div className={classes.inputWrapper}>\n                            <InputField\n                              placeholder=\"First Box Youtube Link 4\"\n                              name=\"firstContentYoutube4\"\n                              error={Boolean(touched.firstContentYoutube4 && errors.firstContentYoutube4)}\n                              helperText={touched.firstContentYoutube4 && errors.firstContentYoutube4}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              type=\"text\"\n                              style={{ width: '50vw' }}\n                              value={values.firstContentYoutube4}\n                            />\n                          </div>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <td className={classes.rowKey}>\n                          Second Box Title\n                        </td>\n                        <td className={classes.rowValue}>\n                          <div className={classes.inputWrapper}>\n                            <InputField\n                              placeholder=\"Second Box Title\"\n                              name=\"secondContentTitle\"\n                              error={Boolean(touched.secondContentTitle && errors.secondContentTitle)}\n                              helperText={touched.secondContentTitle && errors.secondContentTitle}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              type=\"text\"\n                              style={{ width: '50vw' }}\n                              value={values.secondContentTitle}\n                            />\n                          </div>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <td className={classes.rowKey}>\n                          Second Box Description\n                        </td>\n                        <td className={classes.rowValue}>\n                          <div className={classes.inputWrapper}>\n                            <InputField\n                              placeholder=\"Second Box Description\"\n                              name=\"secondContentDesc\"\n                              error={Boolean(touched.secondContentDesc && errors.secondContentDesc)}\n                              helperText={touched.secondContentDesc && errors.secondContentDesc}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              type=\"text\"\n                              style={{ width: '50vw' }}\n                              value={values.secondContentDesc}\n                              textArea\n                            />\n                          </div>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <td className={classes.rowKey}>\n                          Second Box Image Link 1\n                        </td>\n                        <td className={classes.rowValue}>\n                          <div className={classes.inputWrapper} style={{ display: 'flex', gap: 12 }}>\n                            <img src={imageValue ? URL.createObjectURL(imageValue) : data?.secondContent?.links[0]} style={{ width: 50, height: 50, objectFit: 'cover' }} />\n                            <InputField\n                              placeholder=\"Select Image\"\n                              name=\"image\"\n                              onChange={e => setImageValue(e.target.files[0])}\n                              type=\"file\"\n                              value={imageValue?.path}\n                              accept=\"image/png, image/gif, image/jpeg\"\n                            />\n                          </div>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <td className={classes.rowKey}>\n                          Second Box Image Link 2\n                        </td>\n                        <td className={classes.rowValue}>\n                          <div className={classes.inputWrapper} style={{ display: 'flex', gap: 12 }}>\n                            <img src={imageValue2 ? URL.createObjectURL(imageValue2) : data?.secondContent?.links[1]} style={{ width: 50, height: 50, objectFit: 'cover' }} />\n                            <InputField\n                              placeholder=\"Select Image\"\n                              name=\"image\"\n                              onChange={e => setImageValue2(e.target.files[0])}\n                              type=\"file\"\n                              value={imageValue2?.path}\n                              accept=\"image/png, image/gif, image/jpeg\"\n                            />\n                          </div>\n                        </td>\n                      </tr>\n\n                      {/* <tr>\n                        <td className={classes.rowKey}>\n                          Second Box Image Link 3\n                        </td>\n                        <td className={classes.rowValue}>\n                          <div className={classes.inputWrapper} style={{ display: 'flex', gap: 12 }}>\n                            <img src={imageValue3 ? URL.createObjectURL(imageValue3) : data?.secondContent?.links[2]} style={{ width: 50, height: 50, objectFit: 'cover' }} />\n                            <InputField\n                              placeholder=\"Select Image\"\n                              name=\"image\"\n                              onChange={e => setImageValue3(e.target.files[0])}\n                              type=\"file\"\n                              value={imageValue3?.path}\n                              accept=\"image/png, image/gif, image/jpeg\"\n                            />\n                          </div>\n                        </td>\n                      </tr> */}\n\n                      <tr>\n                        <td className={classes.rowKey}></td>\n                        <td className={classes.rowValue}>\n                          <button\n                            type=\"submit\"\n                            className={clsx([classes.authButton, classes.filledButton])}\n                          >\n                            Submit\n                          </button>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </BSTable>\n                </form>\n              )}\n            </Formik>\n\n          </Grid>\n        </Grid>\n      </Card>\n    </DashboardLayout>\n  );\n}\n","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\pages\\dashboard\\orderListing.jsx",["415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440"],"import React, { useState, useEffect, useRef } from \"react\";\n// Navigation\nimport { saveAs } from \"file-saver\";\n// Styles\nimport \"antd/dist/antd.css\";\nimport \"./dashboard.scss\";\n// antd\nimport { Table, Button as AntButton, Pagination, Modal } from \"antd\";\nimport { Card, } from \"react-bootstrap\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\"\n\n\n// Mui Components\nimport { Grid, useTheme, useMediaQuery, Box } from \"@material-ui/core\";\n// Custom components\nimport DashboardLayout from \"../../layouts/dashboardLayout\";\nimport {\n  AppBar,\n  Navbar,\n  NavbarSearch,\n} from \"../../customComponents\";\n// Constants\n\nimport { appConstants } from \"../../themes/constants\";\n// utils methods\nimport { useStyles } from \"../../styles/styles\";\n// Redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  OrderListingAction, OrderStatusUpdateAction, orderDeleteAction,\n} from \"../../store/actions\";\nimport moment from \"moment\";\nimport { toast } from \"react-toastify\";\nimport JSZip from \"jszip\";\nimport JSZipUtils from 'jszip-utils';\n\nexport const orderStatusEnum = {\n  pending: 'pending',\n  inProgress: 'inProgress',\n  delivered: 'delivered'\n}\n\n\nexport const OrderListing = () => {\n  const styleProps = { searchable: true };\n  // Hooks declarations\n  const classes = useStyles(styleProps);\n  const theme = useTheme();\n\n  const dispatch = useDispatch();\n  const { orderList } = useSelector((state) => state.orderManagement);\n  const matches = useMediaQuery(theme.breakpoints.down(\"xs\"));\n  const baseUrl = \"https://s3.amazonaws.com/static.neostack.com/img/react-slick/\"\n  // Global state initialization\n  // const {sidebarRouteIndex,sidebarNestedRouteIndex} = appState\n\n  // local state initialization\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [modal, setModal] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(null);\n  const [viewData, setViewData] = useState([]);\n\n  const [payload, setPayload] = useState({\n    offset: 0,\n    limit: 10,\n    sort: \"\",\n    order: 0,\n    search: \"\",\n  });\n  //Images destructuring\n\n  //Constants\n\n  //lifecycle hooks\n  useEffect(() => {\n    document.title = appConstants.title;\n    // dispatch(handleNavigationStateAction(1, false))\n    dispatch(OrderListingAction(payload));\n  }, []);\n\n  const handlePagination = (pagination) => {\n    // setCurrentPage(pagination)\n    const tempPayload = {\n      ...payload,\n      offset: pagination == 1 ? 0 : (pagination - 1) * 10,\n    };\n    setPayload(tempPayload);\n    dispatch(OrderListingAction(tempPayload));\n    window.scrollTo(0, 0);\n  };\n\n\n  var settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n\n  const columns = [\n    {\n      title: \"Sr. No.\",\n      dataIndex: \"sr\",\n      key: \"sr\",\n      ellipsis: false,\n      render: (key, data, index) => <>{payload.offset + index + 1}</>,\n    },\n    {\n      title: \"Order Id\",\n      dataIndex: \"receiptId\",\n      key: \"receiptId\",\n      ellipsis: false,\n      render: (key, data, index) => {\n        return (\n          <>\n            <span>#{data.receiptId}</span>\n          </>\n        );\n      },\n    },\n    {\n      title: \"Transaction Id\",\n      dataIndex: \"orderId\",\n      key: \"orderId\",\n      ellipsis: false,\n      render: (key, data, index) => {\n        return (\n          <>\n            <span>{data.orderId}</span>\n          </>\n        );\n      },\n    },\n    {\n      title: \"Username\",\n      dataIndex: \"user.name\",\n      key: \"user.name\",\n\n      ellipsis: false,\n      render: (key, data, index) => {\n        return (\n          <>\n            <span>{data?.user?.name}</span>\n          </>\n        );\n      },\n    },\n    {\n      title: \"Email Address\",\n      dataIndex: \"user.email\",\n      key: \"user.email\",\n      ellipsis: false,\n      render: (key, data, index) => {\n        return (\n          <>\n            <span>{data?.user?.email}</span>\n          </>\n        );\n      },\n    },\n    {\n      title: \"Address\",\n      dataIndex: \"address\",\n      key: \"address\",\n\n      ellipsis: false,\n      render: (key, data, index) => {\n        return (\n          <>\n            <span>\n              {data?.user?.address?.street + \" \" + data?.user?.address?.country}\n            </span>\n          </>\n        );\n      },\n    },\n    {\n      title: \"Order Time\",\n      dataIndex: \"createdAt\",\n      key: \"createdAt\",\n      ellipsis: false,\n      render: (key, data, index) => {\n        return (\n          <>\n            <span>{moment(data?.createdAt).format(\"DD-MM-YYYY HH:mm\")}</span>\n          </>\n        );\n      },\n    },\n    {\n      title: \"Price\",\n      dataIndex: \"totalPrice\",\n      key: \"totalPrice\",\n      ellipsis: false,\n      render: (key, data, index) => {\n        return (\n          <>\n            <span>{`₹${data?.totalPrice}`}</span>\n          </>\n        );\n      },\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      ellipsis: false,\n      render: (key, data, index) => {\n        return (\n          <>\n            <span>{data?.status}</span>\n          </>\n        );\n      },\n    },\n    {\n      title: \"Actions\",\n      dataIndex: \"action\",\n      key: \"Action\",\n      align: \"center\",\n      render: (key, data) => {\n        console.log(data?.cart?.picture, \"data?.cart?.picture\", data);\n        return (\n          <Grid className={classes.buttons}>\n            <button\n              className=\"table-action-button\"\n              onClick={() => {\n                setIsModalVisible(true)\n                setViewData(data?.cart)\n              }\n              }\n            >\n              {\"view\"}\n            </button>\n            <button\n              className=\"table-action-button\"\n              onClick={() => downloadImage(data?.cart)}\n            >\n              {\"download\"}\n            </button>\n            {data?.status !== orderStatusEnum.delivered && <button\n              className=\"table-action-button2\"\n              onClick={() => {\n                if (data?.status === orderStatusEnum.pending) {\n                  dispatch(OrderStatusUpdateAction({\n                    id: data?._id,\n                    status: orderStatusEnum.inProgress\n                  },\n                    payload))\n                }\n                else {\n                  dispatch(OrderStatusUpdateAction({\n                    id: data?._id,\n                    status: orderStatusEnum.delivered\n                  }, payload))\n                }\n              }}\n            >\n              Change to {data?.status === orderStatusEnum.pending ? orderStatusEnum.inProgress : orderStatusEnum.delivered}\n            </button>}\n\n            <button\n              className=\"table-action-button3\"\n              onClick={() => {\n                setSelectedValue(data?._id)\n                setModal(true)\n              }}\n            >\n              {\"Delete\"}\n            </button>\n          </Grid>\n        );\n      },\n    },\n  ];\n\n  async function downloadImage(cart) {\n    // for (let i in cart) {\n    //   setTimeout(() => {\n    //     saveAs(cart[i].frame, \"image.jpg\");\n    //     setTimeout(() => {\n    //       saveAs(cart[i].picture, \"image.jpg\");\n    //     }, 200)\n    //   }, 100)\n    // }\n\n    var zip = new JSZip();\n    var count = 0;\n    var zipFilename = \"frames.zip\";\n    cart.forEach(function (item, i) {\n      var filename = item.frame;\n      filename = filename.replace(/[\\/\\*\\|\\:\\<\\>\\?\\\"\\\\]/gi, '').replace(\"httpssequenceimagestaging.blob.core.windows.netretouch\", \"\");\n      JSZipUtils.getBinaryContent(item.frame, function (err, data) {\n        if (err) {\n          throw err;\n        }\n        zip.file(filename, data, { binary: true });\n        var filename2 = item.picture;\n        filename2 = filename2.replace(/[\\/\\*\\|\\:\\<\\>\\?\\\"\\\\]/gi, '').replace(\"httpssequenceimagestaging.blob.core.windows.netretouch\", \"\");\n        JSZipUtils.getBinaryContent(item.picture, function (err2, data2) {\n          if (err2) {\n            throw err2;\n          }\n          zip.file(filename2, data2, { binary: true });\n          count++;\n          if (count == cart.length) {\n            zip.generateAsync({ type: 'blob' }).then(function (content) {\n              saveAs(content, zipFilename);\n            });\n          }\n        });\n      });\n    });\n  }\n  const handleCancel = () => {\n    setIsModalVisible(false)\n  }\n\n  return (\n    <DashboardLayout>\n      <AppBar\n        breadcrumbs={[{ route: \"Order-Listing\", name: \"Order Mangement\" }]}\n      />\n      <Navbar title=\"Orders Mangement\" />\n      <Card className={classes.card}>\n        {matches && (\n          <Box className={classes.searchBox}>\n            <NavbarSearch />\n          </Box>\n        )}\n        <Grid container>\n          <Grid smUp={12} className={classes.tableContainerRow}>\n            <Table\n              className={classes.tableWrapper}\n              scroll\n              bordered\n              columns={columns}\n              dataSource={orderList}\n            />\n            <Pagination current={1} total={10} className=\"table-pagination\" />\n          </Grid>\n        </Grid>\n      </Card>\n\n      {isModalVisible && <div style={{\n        position: 'fixed',\n        width: '81%',\n        height: '100%',\n        top: 0,\n        zIndex: 9999,\n        backgroundColor: '#00000055',\n        overflowY: 'auto',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }}\n        onClick={(e) => {\n          e.stopPropagation()\n          setIsModalVisible(false)\n        }}>\n        <div style={{\n          width: 400,\n          height: 400,\n          backgroundColor: 'white'\n        }} onClick={(e) => {\n          e.stopPropagation()\n        }}>\n          <Slider {...settings}>\n            {viewData.map((v, i) => {\n              return (\n                <img style={{ padding: 10 }} src={v.frame} />\n              )\n            })\n            }\n\n          </Slider>\n        </div></div>}\n\n      <Modal\n        visible={modal}\n        title=\"Delete Order\"\n        closable={false}\n        onCancel={() => {\n          setSelectedValue(null)\n          setModal(false)\n        }}\n        centered={true}\n        footer={[\n          <div className=\"delete-category-modal-footer\">\n            <button style={{ marginRight: 8 }} onClick={() => {\n              setModal(false)\n              dispatch(orderDeleteAction({ id: selectedValue }, payload))\n              setSelectedValue(null)\n            }}>Delete</button>\n            <button onClick={() => {\n              setSelectedValue(null)\n              setModal(false)\n            }}>Cancel</button>\n          </div>\n        ]}\n\n        className=\"delete-category-modal\"\n      >\n        <div className=\"delete-category-modal-text\">Are you sure to delete this order?</div>\n      </Modal>\n    </DashboardLayout>\n  );\n};\n","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\themes\\appImages.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\utils\\cl.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\themes\\regex.js",["441","442","443","444"],"export const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#~^()_+=\\/|{}:;\"'<>`,@$!%*?&.\\[\\]\\\\-])[A-Za-z\\d#~^()_+=\\/|{}:;\"'<>`,@$!%*?&.\\[\\]\\\\-]{8,}$/","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\styles\\styles.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\themes\\colors.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\layouts\\mainLayout.jsx",["445"],"import React from 'react'\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport {AppImages} from '../themes/appImages'\nimport { useStyles } from \"./styles\";\nimport { useHistory} from 'react-router-dom'\nimport CardMedia from '@material-ui/core/CardMedia';\nconst MainLayout = (props) => {\n\n    const classes = useStyles()\n    const history = useHistory()\n\n    return (\n        <Grid container className={classes.wrapper}>\n            <CardMedia image={AppImages.banner} className={classes.bg}>\n                <Box className={classes.page}>\n                    {props.children}\n                </Box>\n            </CardMedia>\n        </Grid>\n    )\n}\n\nexport default MainLayout","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\index.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\store\\actions\\index.js",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\layouts\\styles.js",["446","447","448"],"import { makeStyles } from '@material-ui/core/styles';\nimport { Colors } from '../themes/colors'\n\nconst drawerWidth = 260;\nexport const useStyles = makeStyles((theme) => ({\n  // ==> Global styles<==\n  flex: {\n    display: 'flex !important',\n  },\n  // ===> MainLayout Component <====\n  wrapper: {\n    height: '100%',\n    position: 'fixed',\n  },\n  bg: {\n    extend: 'flex',\n    width: '100%',\n    padding: '5%',\n  },\n  page: {\n    extend: 'flex',\n    minWidth: '240px',\n    width: '60%',\n    maxWidth: '389px',\n    margin: 'auto',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255,255,255)',\n    borderRadius: theme.spacing(1) * 0.5,\n    border: '1px solid #cccccc',\n    boxShadow: \"0 4px 8px 0 #f09C01, 0 6px 20px 0 #f09C01\",\n  },\n  // ===> DashboardLayout Component <===\n  sidebarTab: {\n    extend: 'flex',\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n    cursor: 'pointer',\n  },\n\n  sidebarBtnText: {\n    lineHeight: 30,\n    fontSize: 17,\n    margin: 0,\n  },\n\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerLogo: {\n    position: 'relative',\n    textAlign: 'center',\n    padding: theme.spacing(1.1)\n  },\n  title: {\n    fontWeight: 500,\n    color: \"#f09C01\"\n  },\n  listPadding: {\n    padding: 0,\n  },\n  sidebarList: {\n    marginTop: '0.75rem',\n    marginBottom: '0.75rem',\n    // border: 0,\n    // boxShadow: '0 2px 5px 0 rgba(0, 0, 0, 0.26)',\n  },\n  sidebarIcon: {\n    width: 18,\n    marginTop: 2,\n  },\n  // typographyRoot:{\n  //   margin:'0 !important',\n  // },\n  breadIcon: {\n    width: 24,\n    marginBottom: 4,\n  },\n  // necessary for content to be below app bar\n  customNavbar: {\n    padding: 0,\n    transition: theme.transitions.create(['margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  customNavbarShift: {\n    padding: 0,\n    // width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  container: {\n    display: 'flex',\n  },\n  appBar: {\n    padding: '1%',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    padding: '1%',\n    width: `calc(100% - ${drawerWidth}px)`,\n    [theme.breakpoints.down('sm')]: {\n      marginRight: drawerWidth,\n    },\n    [theme.breakpoints.up('md')]: {\n      marginLeft: drawerWidth,\n    },\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  toolbar: {\n    paddingLeft: '1%',\n    paddingRight: '1%',\n    [theme.breakpoints.down('sm')]: {\n      alignItems: 'baseline',\n      justifyContent: 'flex-end',\n    },\n  },\n  menuButton: {\n    backgroundColor: 'rgba(255, 255, 255, 0)',\n    color: '#f09C01',\n    marginRight: theme.spacing(2),\n    '&:focus': {\n      outline: \"none\"\n    },\n    '&:hover': {\n      background: '#f5f8f9',\n    },\n    marginRight: 0,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    // width: drawerWidth,\n    flexShrink: 0,\n    position: 'relative',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    [theme.breakpoints.up('md')]: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`\n    },\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    // [theme.breakpoints.down('sm')]: {\n    //   marginRight: drawerWidth,\n    // },\n  },\n  breadcrumbIcon: {\n    fontSize: 21,\n    marginTop: 5,\n  },\n  sidebarIconContainer: {\n    width: 30,\n    height: 30,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    float: 'left',\n    marginRight: 13,\n  },\n  icon: {\n    width: '21px !important',\n    fontSize: 21,\n    lineHeight: 30,\n    textAlign: 'center',\n  },\n  seletcedTabIcon: {\n    width: '23px !important',\n    fontSize: 23,\n    lineHeight: 30,\n    textAlign: 'center',\n  },\n  nestedMenuWrapper: {\n    backgroundColor: Colors.white,\n    marginTop: '0.5rem',\n    borderRadius: 4,\n    boxShadow: '0 2px 5px 0 rgba(0, 0, 0, 0.26)',\n  },\n  logo: {\n    width: 100,\n    height: 100,\n    cursor: 'pointer',\n  }\n}))","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\layouts\\dashboardLayout\\index.js",["449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465"],"import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport clsx from 'clsx';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n// Navigation\nimport { useHistory, useLocation } from 'react-router-dom'\n// Styles\nimport 'antd/dist/antd.css'\nimport { useStyles } from '../styles'\nimport './dashboardLayout.scss'\n// fontAwesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome, faUsers, faTrophy, faLocationArrow, faSignOutAlt, faLock, faBook, faStore, faDollarSign, faLaptopHouse, faStreetView, faQuestion } from '@fortawesome/free-solid-svg-icons'\nimport { faCompass } from '@fortawesome/free-regular-svg-icons'\n// Mui Components\nimport withWidth, { isWidthDown, isWidthUp } from '@material-ui/core/withWidth';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Drawer, CssBaseline, List, Typography, Divider, ListItem, Collapse, } from '@material-ui/core';\nimport ArrowDropUpRoundedIcon from '@material-ui/icons/ArrowDropUp';\nimport ArrowDropDownRoundedIcon from '@material-ui/icons/ArrowDropDown';\n// Custom components\n\n// Constants\nimport { AppImages } from '../../themes/appImages'\nimport { Colors } from '../../themes/colors'\n// utils methods\nimport cl from '../../utils/cl'\n// Redux\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleNavigationStateAction, handleSidebarDrawerToggleStateAction, handleClearStateAction, logoutInitiate } from '../../store/actions'\nimport { toast } from 'react-toastify';\nimport { appConstants } from '../../themes/constants';\n\n\nconst DashboardLayout = (props) => {\n\n  cl('props', props)\n\n  // Hooks declarations\n  const matches = useMediaQuery('(min-hight:400px)')\n  console.log('matches', matches)\n  const classes = useStyles();\n  const theme = useTheme();\n  const history = useHistory();\n  const location = useLocation()\n  const tabItemRef = useRef(null)\n  const dispatch = useDispatch()\n  const { appState } = useSelector(state => state)\n  // Global state initialization\n  const { sidebarRouteIndex, sidebarNestedRouteIndex, sidebarDrawerToggleState } = appState\n\n  // local state initialization\n  const [toggleMenu, setToggleMenu] = useState(false)\n\n  //Images destructuring\n  const { logo } = AppImages\n\n  // sidebar tabs for dashboard\n  const tabs = [\n    {\n      icon: faHome,\n      name: 'Dashboard',\n      path: \"/dashboard\"\n    },\n    {\n      icon: faUsers,\n      name: 'User Management',\n      path: \"/users\"\n    },\n    {\n      icon: faStore,\n      name: 'Order Management',\n      path: \"/Order-Listing\"\n    },\n    {\n      icon: faBook,\n      name: 'Content Management',\n      path: \"/content\"\n    },\n    {\n      icon: faDollarSign,\n      name: 'Discount & Offers Management',\n      path: \"/discount\"\n    },\n    {\n      icon: faLaptopHouse,\n      name: 'Home Management',\n      path: \"/home\"\n    },\n    {\n      icon: faStreetView,\n      name: 'Testimonial Management',\n      path: \"/testimonial\"\n    },\n    {\n      icon: faQuestion,\n      name: 'FAQ Management',\n      path: \"/faq\"\n    },\n    {\n      icon: faLock,\n      name: 'Change Password',\n      path: '/Change-Password'\n    },\n    {\n      icon: faSignOutAlt,\n      name: 'Logout',\n      path: '/login',\n    },\n  ]\n  const nestedTabs = [\n    {\n      icon: faLocationArrow,\n      name: 'Terminal Area Listing',\n      path: \"/terminal-area-list\"\n    }\n  ]\n\n\n  // Lifecycle Hooks\n  useEffect(() => {\n    if (isWidthUp('md', props.width)) {\n      dispatch(handleSidebarDrawerToggleStateAction(true))\n    } else if (isWidthDown('md', props.width)) {\n      dispatch(handleSidebarDrawerToggleStateAction(false))\n    }\n  }, [props.width])\n\n  useEffect(() => {\n    // let callback = useCallback(()=>{\n    const nestedRouteIndex = localStorage.getItem(\"sidebarNestedRouteIndex\");\n    const routeIndex = localStorage.getItem(\"sidebarRouteIndex\");\n    cl(\"rouete indices are \", routeIndex, nestedRouteIndex)\n    if (nestedRouteIndex) {\n      dispatch(handleNavigationStateAction(2, false))\n      dispatch(handleNavigationStateAction(nestedRouteIndex, true))\n    } else {\n      dispatch(handleNavigationStateAction(routeIndex || 0, false))\n    }\n    // },[])\n\n    //     callback()\n  }, [])\n\n  // Consoles \n  cl(\"state inside the dashboard\", appState)\n\n\n  const handleTabClick = (event, name, index, path, isTerminalTab) => {\n\n    if (name == \"Logout\") {\n      localStorage.removeItem(\"token\")\n      toast.success(appConstants.authentication.loggedOut, { toastId: \"success\" });\n    }\n    if (!isTerminalTab) {\n      dispatch(handleNavigationStateAction(index, false))\n      setToggleMenu(false)\n      history.push(path)\n    } else {\n      // dispatch(handleNavigationStateAction(null, true))\n      handleToggleMenuTab()\n    }\n  }\n\n\n  //Callback methods\n  const handleToggleMenuTab = () => {\n    setToggleMenu(!toggleMenu)\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Drawer\n        className={classes.drawer}\n        variant={!isWidthUp('md', props.width) ? \"temporary\" : \"persistent\"}\n        anchor=\"left\"\n        open={sidebarDrawerToggleState}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor={!isWidthUp('md', props.width) ? \"right\" : \"left\"}\n        onClose={() => sidebarDrawerToggleState ? dispatch(handleSidebarDrawerToggleStateAction(false)) : dispatch(handleSidebarDrawerToggleStateAction(true))}\n        ModalProps={{\n          keepMounted: true // Better open performance on mobile.\n        }}\n      >\n        <div className={classes.drawerLogo}>\n          <img src={logo} alt=\"logo-image\" className={classes.logo} onClick={() => {\n            dispatch(handleNavigationStateAction(0, false))\n            history.push(\"/dashboard\")\n          }} />\n          <Typography variant=\"h6\" className={classes.title} classes={{ root: classes.typographyRoot }} id=\"title\">ADMIN</Typography>\n        </div>\n        <Divider variant=\"middle\" />\n        <List classes={{ padding: classes.listPadding }}>\n          <div className={classes.sidebarList}>\n            {tabs.map(({ icon, iconWhite, name, path }, index) => {\n              let isTerminalTab = name == \"Terminal Management\" ? true : false;\n              let isSelectedtab = sidebarRouteIndex == index ? true : false;\n              let iconTheme = {\n                color: isSelectedtab ? !isTerminalTab ? Colors.white : Colors.white : '#3c4858', fontSize: 18, position: 'absolute', right: 5, top: 25,\n              }\n              return (\n                <React.Fragment key={name}>\n                  <ListItem\n                    onClick={(event) => handleTabClick(event, name, index, path, isTerminalTab)}\n                  >\n                    <div className={isSelectedtab ? \"sidebarBtnSelected\" : \"sidebarBtn\"}>\n                      <div className={classes.sidebarIconContainer}>\n                        <FontAwesomeIcon icon={icon} color={isSelectedtab ? \"#ffffff\" : '#a9afbb'} className={clsx([classes.icon, isSelectedtab && classes.seletcedTabIcon])} />\n                      </div>\n                      <p className={isSelectedtab ? \"sidebarBtnTextSelected\" : \"sidebarBtnText\"}>\n                        {name}\n                      </p>\n                      {isTerminalTab ? toggleMenu ?\n                        <ArrowDropUpRoundedIcon\n                          style={iconTheme} />\n                        : <ArrowDropDownRoundedIcon\n                          style={iconTheme} />\n                        : true\n                      }\n                    </div>\n                  </ListItem>\n                  {isTerminalTab ?\n                    <Collapse in={toggleMenu} timeout=\"auto\" unmountOnExit classes={{ wrapper: classes.nestedMenuWrapper }}>\n                      <List component=\"div\" disablePadding >\n                        <div>\n                          {nestedTabs.map(({ icon, iconWhite, name, path }, id) => {\n                            let isNestedSelectedTab = sidebarNestedRouteIndex == id ? true : false;\n                            return (\n                              <React.Fragment key={name}>\n                                <ListItem>\n                                  <div className={isNestedSelectedTab ? \"sidebarNestedBtnSelected\" : \"sidebarNestedBtn\"}\n                                    onClick={() => {\n                                      dispatch(handleNavigationStateAction(index, false))\n                                      dispatch(handleNavigationStateAction(id, true))\n                                      history.push(path)\n                                    }}\n                                  >\n                                    <div className={classes.sidebarIconContainer}>\n                                      <FontAwesomeIcon icon={icon} color={isNestedSelectedTab ? \"#ffffff\" : '#a9afbb'} className={clsx([classes.icon, isNestedSelectedTab && classes.seletcedTabIcon])} />\n                                    </div>\n                                    <p\n                                      className={isNestedSelectedTab ? \"sidebarBtnTextSelected\" : \"sidebarBtnText\"}>\n                                      {name}\n                                    </p>\n                                  </div>\n                                </ListItem>\n                              </React.Fragment>\n                            )\n                          })}\n                        </div>\n                      </List>\n                    </Collapse>\n                    : true}\n                </React.Fragment>\n              )\n            })}\n          </div>\n        </List>\n        <div className=\"sidebarBackground\" style={{ zIndex: -7, }} />\n      </Drawer>\n      <main className={clsx(classes.content, {\n        [classes.contentShift]: sidebarDrawerToggleState,\n      })}>\n        {props.children}\n      </main>\n    </div>\n  );\n}\n\nexport default withWidth()(DashboardLayout)\n","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\confirmationModal.jsx",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\dropdown.jsx",["466","467","468","469"],"import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input'\nimport FormControl from '@material-ui/core/FormControl';\nimport clsx from 'clsx'\nimport {useStyles} from './styles'\nimport { Select } from 'antd';\nconst Dropdown = (props) => {\n\n    const {options} = props\n\n    const { Option } = Select;\n    const handleChange = (event) => {\n    };\n    const classes = useStyles()\n    return ( \n      <FormControl classes={{root:classes.formControlRoot}}>\n        {/* <Input> */}\n          <Select placeholder=\"Age\" onChange={handleChange} className={clsx([classes.dropdown])}>\n              <Option value=\"jack\">Jack</Option>\n              <Option value=\"lucy\">Lucy</Option>\n              <Option value=\"disabled\" disabled>\n                  Disabled\n              </Option>\n              <Option value=\"Yiminghe\">yiminghe</Option>\n          </Select>\n        {/* </Input> */}\n        {/* <span className={classes.spanBorder}></span> */}\n      </FormControl>\n    )\n}\n\n\nexport default Dropdown\n","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\styles.js",["470"],"\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Colors } from '../themes/colors'\n\nconst drawerWidth = 260\nexport const useStyles = makeStyles((theme) => ({\n  // ===>Navbar Component<====\n  header: {\n    justifyContent: 'space-between !important',\n    width: '97%',\n    left: '1.5%',\n    height: '3.75rem',\n    borderRadius: 3,\n    position: 'relative',\n    padding: '15px',\n    zIndex: 45,\n    background: 'linear-gradient(60deg, #f09C01,#f09C01)',\n    boxShadow: '0 12px 20px -10px rgb(156 39 176 / 28%), 0 4px 20px 0px rgb(0 0 0 / 12%), 0 7px 8px -5px rgb(156 39 176 / 20%)',\n  },\n  navbarText: {\n    paddingTop: '0 !important',\n    paddingBottom: '0 !important',\n    fontSize: '18px !important',\n    lineHeight: '1rem !important',\n  },\n  navbarTextSearch: {\n    fontSize: '16px !important',\n    fontWeight: 500,\n  },\n  navbarInput: {\n    width: '74%',\n    borderRadius: '65rem',\n    padding: '0.5rem 0.8rem',\n    fontSize: 14,\n    fontWeight: 500,\n    color: '#555555'\n  },\n  // ======> InputField Component <======\n  my: {\n    marginTop: '0.5rem !important',\n    marginBottom: '0.5rem  !important',\n  },\n  // ======> AppBar Component <======\n  appBar: {\n    position: 'relative !important',\n    marginBottom: '1.25rem !important',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    position: 'relative !important',\n    marginBottom: '1.25rem !important',\n    width: `calc(100% - ${drawerWidth}px)`,\n    [theme.breakpoints.down('sm')]: {\n      // marginRight: drawerWidth,\n    },\n    [theme.breakpoints.up('md')]: {\n      // marginLeft: drawerWidth,\n    },\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  toolbar: {\n    minWidth: 48,\n    paddingLeft: '0 !important',\n    paddingRight: '0 !important',\n    [theme.breakpoints.down('sm')]: {\n      alignItems: 'baseline',\n      justifyContent: 'flex-end',\n    },\n  },\n  menuButton: {\n    backgroundColor: 'rgba(255, 255, 255, 0)',\n    color: '#7F913F',\n    marginRight: theme.spacing(2),\n    '&:focus': {\n      outline: \"none\"\n    },\n    '&:hover': {\n      background: '#f5f8f9',\n    },\n    marginRight: 0,\n  },\n  hide: {\n    display: 'none',\n  },\n  // ======> Button Component <======\n  button: {\n    backgroundColor: Colors.primary,\n    borderColor: Colors.primary,\n    borderRadius: 3,\n    padding: '0px 27px',\n    fontWeight: 500,\n    height: 38,\n    '&:hover': {\n      backgroundColor: '#f09C01',\n      borderColor: '#f09C01',\n    },\n    '&:focus': {\n      backgroundColor: '#f09C01',\n      borderColor: '#f09C01',\n    },\n    '&:active': {\n      backgroundColor: '#f09C01',\n      borderColor: '#f09C01',\n    },\n    fontSize: 14,\n    // [theme.breakpoints.down('lg')]: {\n    //     fontSize:'0.95rem',\n    // },\n    // [theme.breakpoints.down('sm')]: {\n    //     fontSize:'0.9rem',\n    // },\n    // [theme.breakpoints.down('xs')]: {\n    //     fontSize:'0.85rem',\n    // },\n    marginRight: '1rem'\n  },\n  grey: {\n    backgroundColor: '#808080 !important',\n    borderColor: '#808080 !important',\n    '&:hover': {\n      backgroundColor: '#808080 !important',\n      borderColor: '#808080 !important',\n    },\n    '&:focus': {\n      backgroundColor: '#808080 !important',\n      borderColor: '#808080 !important',\n    },\n    '&:active': {\n      backgroundColor: '#808080 !important',\n      borderColor: '#808080 !important',\n    },\n  },\n  mb: {\n    marginBottom: '1rem'\n  },\n  // ======> Breadcrumbs Component <======\n  breadcrumbs: {\n    padding: 15,\n    backgroundColor: Colors.white,\n    borderRadius: 4,\n    display: 'flex',\n    alignItems: 'center',\n  },\n  separator: {\n    display: 'inline-block',\n    margin: '0 2px',\n  },\n  breadcrumbIcon: {\n    width: '21px !important',\n    fontSize: 21,\n    verticalAlign: 'baseline',\n    cursor: 'pointer',\n  },\n  breadcrumbItem: {\n    margin: '0 2px',\n  },\n  breadcrumbLink: {\n    cursor: 'pointer',\n    color: `${Colors.primary} !important`,\n    '&:hover': {\n      color: '#f09C01 !important',\n    }\n  },\n  rightArrow: {\n    width: 11.5,\n    height: 21,\n    verticalAlign: 'sub',\n  },\n  // ======> Pagination Component <======\n  paginationWrapper: {\n    padding: '1rem',\n    '& >:nth-child(1)': {\n      alignSelf: 'center',\n    },\n  },\n  paginationGridItem: {\n    '@media (max-width:600px)': {\n      width: '50%',\n    },\n    '@media (max-width:360px)': {\n      width: '40%',\n    },\n    '@media (max-width:320px)': {\n      width: '26%',\n    },\n  },\n  paginationUl: {\n    listStyle: \"none\",\n    padding: 0,\n    margin: 0,\n    display: \"flex\",\n    float: 'right',\n    marginRight: -12,\n  },\n  selectedPage: {\n    width: 27,\n    height: 26,\n    backgroundColor: `${Colors.primary} !important`,\n    color: `${Colors.white}  !important`,\n    borderRadius: `3px !important`,\n    fontSize: `16px !important`,\n    '&:hover': {\n      backgroundColor: `${Colors.primary} !important`,\n      color: `${Colors.white}  !important`,\n      borderRadius: '3px !important',\n    },\n  },\n  unSelectedPage: {\n    width: 27,\n    height: 26,\n    color: `${Colors.primary} !important`,\n    borderRadius: '3px !important',\n    fontSize: `14px !important`,\n    '&:hover': {\n      backgroundColor: `${Colors.white}  !important`,\n      borderRadius: '3px !important',\n    },\n  },\n  paginationText: {\n    '@media (max-width:325px)': {\n      fontSize: '0.8rem',\n    },\n    '@media (max-width:285px)': {\n      fontSize: '0.625rem',\n    },\n  },\n  paginationActions: {\n    height: 26,\n    color: `${Colors.primary} !important`,\n    borderRadius: '3px !important',\n    fontSize: `14px !important`,\n    '&:hover': {\n      backgroundColor: `${Colors.white}  !important`,\n      borderRadius: '3px !important',\n    },\n  },\n  ellipses: {\n    color: `${Colors.primary} !important`,\n  },\n  // ===>Dropdown Component<===\n\n  formControlRoot: {\n    width: '100%',\n    '& .ant-select-selector': {\n      outline: 0,\n    },\n\n    '& .ant-select-focused:not(.ant-select-disabled).ant-select:not(.ant-select-customize-input) .ant-select-selector': {\n      outline: 0,\n      boxShadow: '0 0 0 0px',\n      border: '1px solid #d2d2d2',\n      borderBottom: '2px solid #f09C01',\n      transition: 'transform 200ms cubic-bezier(0, 0, 0.2, 1) 0ms',\n    },\n    '& .ant-select:not(.ant-select-customize-input) .ant-select-selector': {\n      borderRadius: 3,\n      backgroundColor: 'transparent',\n      padding: '3.75px 12px !important',\n      border: '1px solid #d2d2d2',\n      height: '100%',\n    },\n  },\n  dropdown: {\n    position: 'relative',\n    display: 'inline-block',\n  },\n  spanBorder: {\n    position: 'relative',\n    transform: 'scaleX(0)',\n    transition: 'transform 200ms cubic-bezier(0, 0, 0.2, 1) 0ms',\n    borderBottom: '2px solid #7F913F !important',\n    borderBottomLeftRadius: 100,\n    borderBottomRightRadius: 100,\n    pointerEvents: 'none',\n    bottom: 2,\n    width: '99.5%',\n    marginLeft: '0.25%',\n  },\n  // ==> Confirmation Text<==\n  confirmationText: {\n    color: Colors.title,\n    marginTop: 12,\n  }\n}))\n\n\n","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\navbarSearch.jsx",["471","472"],"import React from 'react';\nimport clsx from 'clsx';\nimport { Navbar as BsNavbar } from 'react-bootstrap';\nimport { Input } from 'antd'\n// Styles\nimport { useStyles } from './styles'\n\nconst NavbarSearch = (props) => {\n  // Hooks declarations\n  const classes = useStyles();\n  // Props destructuring\n\n  return (<div>\n    {/* <BsNavbar.Brand className={classes.navbarTextSearch}>Search:&nbsp;</BsNavbar.Brand> */}\n    <Input className={classes.navbarInput} onChange={props.onChange} value={props.value} placeholder='Search' />\n  </div>\n  )\n}\n\nexport default NavbarSearch\n\n","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\navbar.jsx",["473"],"import React from 'react';\nimport clsx from 'clsx';\nimport { useMediaQuery, useTheme } from '@material-ui/core'\nimport { Navbar as BsNavbar } from 'react-bootstrap';\nimport NavbarSearch from './navbarSearch'\n// Styles\nimport { useStyles } from './styles'\n\nconst Navbar = (props) => {\n    // Hooks declarations\n    const classes = useStyles();\n    const theme = useTheme()\n    const matches = useMediaQuery(theme.breakpoints.up('sm'));\n    // Props destructuring\n    const { title, searchable, onChange, onKeyDown, value } = props\n\n    return (\n        <BsNavbar className={classes.header} variant=\"dark\">\n            <BsNavbar.Brand className={classes.navbarText}>{title}</BsNavbar.Brand>\n            {matches ? searchable && <NavbarSearch onChange={onChange} onKeyDown={onKeyDown} value={value} /> : true}\n        </BsNavbar>\n    )\n}\n\nexport default Navbar\n\n","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\paginationBar.jsx",["474","475"],"import React from 'react';\nimport clsx from 'clsx'\n// Mui Components\nimport  Typography from '@material-ui/core/Typography'\nimport  Grid from '@material-ui/core/Grid'\nimport {Pagination} from '@material-ui/lab';\nimport { usePagination } from '@material-ui/lab/Pagination';\nimport IconButton from \"@material-ui/core/IconButton\";\n// utils methods\nimport cl from '../utils/cl'\n// styles\nimport {useStyles} from './styles'\n\nconst PaginationBar = (props) => {\n\n    const {\n        count,\n        totalEntries,\n        totalVisibleEntries,\n    } = props\n\n    const classes = useStyles()\n    const { items } = usePagination({\n        count: count,\n    });\n\n    const renderPagination=()=>{\n        return (\n            <nav>\n      <ul className={classes.paginationUl}>\n        {items.map(({ page, type, selected, ...item }, index) => {\n          let children = null;\n\n          if (type === 'start-ellipsis' || type === 'end-ellipsis') {\n            children = <span className={classes.ellipses}>...</span>;\n          } else if (type === 'page') {\n            children = (\n               <IconButton\n                className={clsx([selected ? classes.selectedPage:classes.unSelectedPage])}\n                {...item}\n              >\n                {page}\n              </IconButton>\n            );\n          } else {\n            children = (\n              <IconButton {...item} className={classes.paginationActions}>\n                {type === \"previous\" ? \"Previous\" : \"Next\"}\n              </IconButton>\n            );\n          }\n\n          return <li key={index}>{children}</li>;\n        })}\n      </ul>\n    </nav>\n        )\n    }\n\n    return ( totalEntries>0?\n        <Grid container className={classes.paginationWrapper} justify=\"space-between\" spacing={1}>\n            <Grid item sm={6} className={classes.paginationGridItem} >\n                <Typography variant=\"body2\" className={classes.paginationText}>Showing 1 to {totalVisibleEntries} of {totalEntries} entries</Typography>\n            </Grid>\n            <Grid item sm={6} className={classes.paginationGridItem}>\n                {renderPagination()}\n            </Grid>\n            </Grid>\n        : true\n    )\n}\n\n\nexport default PaginationBar","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\inputField.jsx",["476"],"import React from 'react'\nimport {\n    makeStyles,\n    TextField,\n} from '@material-ui/core'\nimport clsx from 'clsx'\nimport { useStyles } from './styles'\n\nconst InputField = (props) => {\n\n    const classes = useStyles()\n\n    const {\n        error,\n        helperText,\n        placeholder,\n        name,\n        onBlur,\n        onChange,\n        type,\n        value,\n        style,\n        autoComplete,\n        disabled,\n        my,\n        textArea,\n        onKeyDown\n    } = props\n    return (\n        <TextField\n            placeholder={placeholder}\n            error={error}\n            noValidate\n            helperText={helperText}\n            name={name}\n            onBlur={onBlur}\n            onChange={onChange}\n            type={type}\n            value={value}\n            fullWidth\n            // classes={{root:classes.my}}\n            className={clsx([classes.input, my && classes.my])}\n            multiline={textArea && true}\n            rows={textArea && 7}\n            autoComplete={autoComplete ? autoComplete : \"\"}\n            disabled={disabled}\n            onKeyDown={onKeyDown}\n            style={style}\n        />\n    )\n}\n\n\nexport default InputField","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\button.jsx",[],"F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\breadcrumbs.jsx",["477","478","479","480","481","482","483","484"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\n// Styles\nimport {useStyles} from './styles'\n\nimport Typography from \"@material-ui/core/Typography\";\n// Navigation\nimport { Route, MemoryRouter } from 'react-router'\nimport { Link, useHistory } from 'react-router-dom'\nimport {Breadcrumb} from 'antd'\n// fontAwesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\n\nimport {Colors} from '../themes/colors'\nimport {AppImages} from '../themes/appImages'\nimport routeConfig from '../routes/routeConfig'\n// Redux\nimport { useSelector, useDispatch } from 'react-redux'\nimport {handleNavigationStateAction, handleSidebarDrawerToggleStateAction } from '../store/actions'\n// Breadcrumb routes to dynamically generating breadcrumbs\n// let breadcrumbNameMap = {\n//     {\n//         \"/users\": \"User Management\"\n//     },\n//     {\n//         \"/view-user-details/:id\":\"View User Details\"\n//     },\n//     {\n//         \"/view-saved-locations/:id\":\"View Saved Locations\"\n//     },\n//     {\n//         \"/edit-user/:id\":\"Edit User\"\n//     },\n//     {\n//         \"/terminal-arear-list\":\"Terminal Area Listing\"\n//     },\n//     {\n//         \"/edit-terminal-area/:id\":\"Edit Termiinal Area\"\n//     },\n//     {\n//         \"/add-terminal-area\":\"Add Terminal Area\"\n//     },\n//     {\n//         \"/import-terminal-area\":\"Import Terminal Area\"\n//     },\n//     {\n//         \"/post/:id\":\"Report Post\"\n//     },\n//     {\n//         \"/view-manage-post/:id\":\"View Report post\"\n//     },\n//     {\n//         \"/terminals\":\"Terminal Listing\"\n//     },\n//     {\n//         \"/add-terminal\":\"Add Terminal\"\n//     },\n//     {\n//         \"/edit-terminal/:id\":\"Edit Terminal\"\n//     },\n//     {\n//         \"/import-terminal\":\"Import Terminal\"\n//     },\n//     {\n//         \"/report-list\":\"Report Post\"\n//     },\n//     {\n//         \"/view-report-list/:id\":\"Report Post Details\"\n//     },\n// }\n\n\nconst Breadcrumbs = (props) => {\n    const {pathSnippets} = props\n    // Hooks declarations\n    const classes = useStyles();\n    const history = useHistory();\n     const dispatch = useDispatch()\n\n    // To get path snippets from url dynamicaly\n    // const pathSnippets = location.pathname.split('/').filter(i => i);\n    const extraBreadcrumbItems = pathSnippets.map((breadcrumb, index) => {\n\n        // To make url for the breadcrumb link dynamicaly\n        // const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\n        \n        return (breadcrumb.name==\"dashboard\"?true:(<React.Fragment key={index.toString()}>\n        <div className={classes.separator}>\n            <img src={AppImages.rightArrowSvg} className={classes.rightArrow} />\n        </div>\n        <Breadcrumb.Item key={breadcrumb.route} className={classes.breadcrumbItem}>\n            {index == pathSnippets.length-1?\n            <Typography variant=\"subtitle1\" display=\"inline\"> \n                {breadcrumb.name}\n            </Typography>:\n                <Typography variant=\"subtitle1\"  onClick={()=>history.push(breadcrumb.route)} display=\"inline\" className={classes.breadcrumbLink}>{breadcrumb.name}</Typography>\n            }\n        </Breadcrumb.Item>\n        </React.Fragment>)\n        );\n    });\n\n    // Home breadcrumb and concated extra breadcrumbs\n    const breadcrumbItems = [\n        <Breadcrumb.Item key=\"home\" className={classes.breadcrumbItem}>\n                <FontAwesomeIcon icon={faHome} color={Colors.primary} onClick={()=>{\n                dispatch(handleNavigationStateAction(0, false))\n                history.push(\"/dashboard\")\n                }} className={classes.breadcrumbIcon}  />\n        </Breadcrumb.Item>,\n    ].concat(extraBreadcrumbItems);\n    \n    return (\n        <MemoryRouter initialEntries={[\"/dashboard\"]} initialIndex={0}>\n                <Route>   \n                    <Breadcrumb aria-label=\"breadcrumb\" separator=\"\" className={classes.breadcrumbs}>\n                        {breadcrumbItems}\n                    </Breadcrumb>\n                </Route>\n        </MemoryRouter>\n    );\n}\nexport default Breadcrumbs  ","F:\\react\\family-vibes\\FamilyVibesPanel-main\\src\\customComponents\\appBar.jsx",["485","486","487","488","489","490"],"\nimport React, { useState, useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n// Styles\nimport {useStyles} from './styles'\n// Custom components\nimport Breadcrumbs from './breadcrumbs'\n// Mui Components\nimport withWidth,{isWidthUp} from '@material-ui/core/withWidth';\nimport {AppBar as MuiAppBar} from \"@material-ui/core\";\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Hidden from \"@material-ui/core/Hidden\"\nimport MenuIcon from '@material-ui/icons/Menu';\n// utils methods\nimport cl from '../utils/cl'\n// Redux\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleNavigationStateAction, handleSidebarDrawerToggleStateAction } from '../store/actions'\n\n\nconst AppBar = (props) => {\n\n  const {breadcrumbs} = props\n  // Hooks declarations\n  const classes = useStyles();\n  const dispatch = useDispatch()\n  const { appState } = useSelector(state => state)\n  // Global state initialization\n  const {sidebarDrawerToggleState } = appState\n\n  //Callback methods\n  const handleDrawerOpen = () => {\n    cl('inside drawer terye click')\n    dispatch(handleSidebarDrawerToggleStateAction(true))\n  };\n\n  const handleDrawerClose = () => {\n    cl('inside drawer  fasf click')\n    dispatch(handleSidebarDrawerToggleStateAction(false))\n  };\n\n  return ( <MuiAppBar elevation={0}  color=\"transparent\" className={clsx(classes.appBar, {\n            [classes.appBarShift]: sidebarDrawerToggleState,\n          })}>\n            <Toolbar className={classes.toolbar}>\n              <Hidden mdUp>\n                {!sidebarDrawerToggleState ?\n                  <IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    onClick={handleDrawerOpen}\n                    edge=\"start\"\n                    className={clsx(classes.menuButton, sidebarDrawerToggleState && classes.hide)}\n                  >\n                    <MenuIcon />\n                  </IconButton> : true\n                  // <IconButton onClick={handleDrawerClose} className={classes.menuButton}>\n                  //   {isWidthUp('md', props.width) ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                  // </IconButton>\n                }\n              </Hidden>\n              <Hidden smDown>\n                <Breadcrumbs pathSnippets={breadcrumbs}  />\n              </Hidden>\n        </Toolbar>\n        </MuiAppBar>\n        \n  );\n}\n\nexport default withWidth()(AppBar)\n\n\n",{"ruleId":"491","replacedBy":"492"},{"ruleId":"493","replacedBy":"494"},{"ruleId":"495","severity":1,"message":"496","line":29,"column":6,"nodeType":"497","endLine":29,"endColumn":8,"suggestions":"498"},{"ruleId":"499","severity":1,"message":"500","line":1,"column":28,"nodeType":"501","messageId":"502","endLine":1,"endColumn":36},{"ruleId":"499","severity":1,"message":"503","line":11,"column":10,"nodeType":"501","messageId":"502","endLine":11,"endColumn":14},{"ruleId":"499","severity":1,"message":"504","line":14,"column":22,"nodeType":"501","messageId":"502","endLine":14,"endColumn":28},{"ruleId":"505","severity":1,"message":"506","line":52,"column":17,"nodeType":"507","endLine":52,"endColumn":87},{"ruleId":"499","severity":1,"message":"508","line":21,"column":10,"nodeType":"501","messageId":"502","endLine":21,"endColumn":23},{"ruleId":"495","severity":1,"message":"509","line":43,"column":8,"nodeType":"497","endLine":43,"endColumn":10,"suggestions":"510"},{"ruleId":"499","severity":1,"message":"500","line":1,"column":28,"nodeType":"501","messageId":"502","endLine":1,"endColumn":36},{"ruleId":"499","severity":1,"message":"511","line":7,"column":10,"nodeType":"501","messageId":"502","endLine":7,"endColumn":26},{"ruleId":"499","severity":1,"message":"503","line":11,"column":10,"nodeType":"501","messageId":"502","endLine":11,"endColumn":14},{"ruleId":"499","severity":1,"message":"512","line":13,"column":8,"nodeType":"501","messageId":"502","endLine":13,"endColumn":10},{"ruleId":"499","severity":1,"message":"504","line":15,"column":22,"nodeType":"501","messageId":"502","endLine":15,"endColumn":28},{"ruleId":"495","severity":1,"message":"513","line":38,"column":6,"nodeType":"497","endLine":38,"endColumn":8,"suggestions":"514"},{"ruleId":"505","severity":1,"message":"506","line":57,"column":9,"nodeType":"507","endLine":57,"endColumn":79},{"ruleId":"499","severity":1,"message":"515","line":18,"column":5,"nodeType":"501","messageId":"502","endLine":18,"endColumn":13},{"ruleId":"499","severity":1,"message":"500","line":175,"column":17,"nodeType":"501","messageId":"502","endLine":175,"endColumn":25},{"ruleId":"499","severity":1,"message":"516","line":176,"column":8,"nodeType":"501","messageId":"502","endLine":176,"endColumn":14},{"ruleId":"499","severity":1,"message":"517","line":179,"column":18,"nodeType":"501","messageId":"502","endLine":179,"endColumn":28},{"ruleId":"499","severity":1,"message":"518","line":189,"column":10,"nodeType":"501","messageId":"502","endLine":189,"endColumn":20},{"ruleId":"499","severity":1,"message":"519","line":189,"column":22,"nodeType":"501","messageId":"502","endLine":189,"endColumn":27},{"ruleId":"499","severity":1,"message":"520","line":189,"column":29,"nodeType":"501","messageId":"502","endLine":189,"endColumn":34},{"ruleId":"499","severity":1,"message":"521","line":189,"column":36,"nodeType":"501","messageId":"502","endLine":189,"endColumn":41},{"ruleId":"499","severity":1,"message":"522","line":190,"column":16,"nodeType":"501","messageId":"502","endLine":190,"endColumn":25},{"ruleId":"499","severity":1,"message":"523","line":190,"column":27,"nodeType":"501","messageId":"502","endLine":190,"endColumn":30},{"ruleId":"499","severity":1,"message":"524","line":190,"column":32,"nodeType":"501","messageId":"502","endLine":190,"endColumn":35},{"ruleId":"499","severity":1,"message":"525","line":192,"column":10,"nodeType":"501","messageId":"502","endLine":192,"endColumn":20},{"ruleId":"499","severity":1,"message":"526","line":193,"column":10,"nodeType":"501","messageId":"502","endLine":193,"endColumn":16},{"ruleId":"499","severity":1,"message":"527","line":193,"column":18,"nodeType":"501","messageId":"502","endLine":193,"endColumn":23},{"ruleId":"499","severity":1,"message":"528","line":193,"column":31,"nodeType":"501","messageId":"502","endLine":193,"endColumn":42},{"ruleId":"499","severity":1,"message":"529","line":193,"column":44,"nodeType":"501","messageId":"502","endLine":193,"endColumn":48},{"ruleId":"499","severity":1,"message":"530","line":193,"column":50,"nodeType":"501","messageId":"502","endLine":193,"endColumn":53},{"ruleId":"499","severity":1,"message":"531","line":193,"column":55,"nodeType":"501","messageId":"502","endLine":193,"endColumn":61},{"ruleId":"499","severity":1,"message":"532","line":193,"column":63,"nodeType":"501","messageId":"502","endLine":193,"endColumn":73},{"ruleId":"499","severity":1,"message":"533","line":193,"column":75,"nodeType":"501","messageId":"502","endLine":193,"endColumn":82},{"ruleId":"499","severity":1,"message":"534","line":193,"column":84,"nodeType":"501","messageId":"502","endLine":193,"endColumn":92},{"ruleId":"499","severity":1,"message":"535","line":193,"column":104,"nodeType":"501","messageId":"502","endLine":193,"endColumn":112},{"ruleId":"499","severity":1,"message":"536","line":193,"column":114,"nodeType":"501","messageId":"502","endLine":193,"endColumn":125},{"ruleId":"499","severity":1,"message":"537","line":193,"column":127,"nodeType":"501","messageId":"502","endLine":193,"endColumn":139},{"ruleId":"499","severity":1,"message":"538","line":193,"column":141,"nodeType":"501","messageId":"502","endLine":193,"endColumn":153},{"ruleId":"499","severity":1,"message":"539","line":196,"column":38,"nodeType":"501","messageId":"502","endLine":196,"endColumn":44},{"ruleId":"499","severity":1,"message":"540","line":198,"column":10,"nodeType":"501","messageId":"502","endLine":198,"endColumn":25},{"ruleId":"499","severity":1,"message":"541","line":199,"column":10,"nodeType":"501","messageId":"502","endLine":199,"endColumn":23},{"ruleId":"499","severity":1,"message":"542","line":201,"column":10,"nodeType":"501","messageId":"502","endLine":201,"endColumn":19},{"ruleId":"499","severity":1,"message":"543","line":202,"column":10,"nodeType":"501","messageId":"502","endLine":202,"endColumn":16},{"ruleId":"499","severity":1,"message":"544","line":203,"column":10,"nodeType":"501","messageId":"502","endLine":203,"endColumn":29},{"ruleId":"499","severity":1,"message":"512","line":206,"column":8,"nodeType":"501","messageId":"502","endLine":206,"endColumn":10},{"ruleId":"499","severity":1,"message":"545","line":209,"column":10,"nodeType":"501","messageId":"502","endLine":209,"endColumn":21},{"ruleId":"499","severity":1,"message":"546","line":210,"column":34,"nodeType":"501","messageId":"502","endLine":210,"endColumn":61},{"ruleId":"499","severity":1,"message":"547","line":210,"column":63,"nodeType":"501","messageId":"502","endLine":210,"endColumn":81},{"ruleId":"499","severity":1,"message":"548","line":210,"column":83,"nodeType":"501","messageId":"502","endLine":210,"endColumn":107},{"ruleId":"499","severity":1,"message":"549","line":216,"column":11,"nodeType":"501","messageId":"502","endLine":216,"endColumn":16},{"ruleId":"499","severity":1,"message":"550","line":218,"column":11,"nodeType":"501","messageId":"502","endLine":218,"endColumn":19},{"ruleId":"499","severity":1,"message":"551","line":219,"column":11,"nodeType":"501","messageId":"502","endLine":219,"endColumn":21},{"ruleId":"499","severity":1,"message":"552","line":1,"column":38,"nodeType":"501","messageId":"502","endLine":1,"endColumn":44},{"ruleId":"499","severity":1,"message":"553","line":3,"column":10,"nodeType":"501","messageId":"502","endLine":3,"endColumn":20},{"ruleId":"499","severity":1,"message":"554","line":6,"column":8,"nodeType":"501","messageId":"502","endLine":6,"endColumn":30},{"ruleId":"499","severity":1,"message":"555","line":7,"column":8,"nodeType":"501","messageId":"502","endLine":7,"endColumn":26},{"ruleId":"499","severity":1,"message":"556","line":8,"column":8,"nodeType":"501","messageId":"502","endLine":8,"endColumn":30},{"ruleId":"499","severity":1,"message":"557","line":9,"column":8,"nodeType":"501","messageId":"502","endLine":9,"endColumn":28},{"ruleId":"499","severity":1,"message":"558","line":10,"column":8,"nodeType":"501","messageId":"502","endLine":10,"endColumn":22},{"ruleId":"499","severity":1,"message":"559","line":11,"column":8,"nodeType":"501","messageId":"502","endLine":11,"endColumn":33},{"ruleId":"499","severity":1,"message":"542","line":24,"column":10,"nodeType":"501","messageId":"502","endLine":24,"endColumn":19},{"ruleId":"499","severity":1,"message":"512","line":28,"column":8,"nodeType":"501","messageId":"502","endLine":28,"endColumn":10},{"ruleId":"499","severity":1,"message":"560","line":31,"column":39,"nodeType":"501","messageId":"502","endLine":31,"endColumn":61},{"ruleId":"495","severity":1,"message":"513","line":121,"column":8,"nodeType":"497","endLine":121,"endColumn":10,"suggestions":"561"},{"ruleId":"499","severity":1,"message":"516","line":2,"column":8,"nodeType":"501","messageId":"502","endLine":2,"endColumn":14},{"ruleId":"499","severity":1,"message":"539","line":13,"column":18,"nodeType":"501","messageId":"502","endLine":13,"endColumn":24},{"ruleId":"499","severity":1,"message":"562","line":13,"column":26,"nodeType":"501","messageId":"502","endLine":13,"endColumn":39},{"ruleId":"499","severity":1,"message":"563","line":29,"column":11,"nodeType":"501","messageId":"502","endLine":29,"endColumn":18},{"ruleId":"495","severity":1,"message":"564","line":50,"column":8,"nodeType":"497","endLine":50,"endColumn":10,"suggestions":"565"},{"ruleId":"566","severity":1,"message":"567","line":61,"column":62,"nodeType":"568","messageId":"569","endLine":61,"endColumn":64},{"ruleId":"570","severity":1,"message":"571","line":82,"column":46,"nodeType":"507","endLine":82,"endColumn":104},{"ruleId":"499","severity":1,"message":"516","line":2,"column":8,"nodeType":"501","messageId":"502","endLine":2,"endColumn":14},{"ruleId":"499","severity":1,"message":"539","line":13,"column":18,"nodeType":"501","messageId":"502","endLine":13,"endColumn":24},{"ruleId":"499","severity":1,"message":"562","line":13,"column":26,"nodeType":"501","messageId":"502","endLine":13,"endColumn":39},{"ruleId":"499","severity":1,"message":"563","line":29,"column":11,"nodeType":"501","messageId":"502","endLine":29,"endColumn":18},{"ruleId":"495","severity":1,"message":"564","line":50,"column":8,"nodeType":"497","endLine":50,"endColumn":10,"suggestions":"572"},{"ruleId":"566","severity":1,"message":"567","line":61,"column":62,"nodeType":"568","messageId":"569","endLine":61,"endColumn":64},{"ruleId":"499","severity":1,"message":"539","line":14,"column":18,"nodeType":"501","messageId":"502","endLine":14,"endColumn":24},{"ruleId":"499","severity":1,"message":"562","line":14,"column":26,"nodeType":"501","messageId":"502","endLine":14,"endColumn":39},{"ruleId":"499","severity":1,"message":"573","line":21,"column":10,"nodeType":"501","messageId":"502","endLine":21,"endColumn":27},{"ruleId":"499","severity":1,"message":"563","line":28,"column":11,"nodeType":"501","messageId":"502","endLine":28,"endColumn":18},{"ruleId":"495","severity":1,"message":"564","line":45,"column":8,"nodeType":"497","endLine":45,"endColumn":10,"suggestions":"574"},{"ruleId":"566","severity":1,"message":"567","line":70,"column":62,"nodeType":"568","messageId":"569","endLine":70,"endColumn":64},{"ruleId":"570","severity":1,"message":"571","line":98,"column":46,"nodeType":"507","endLine":98,"endColumn":106},{"ruleId":"575","severity":1,"message":"576","line":117,"column":13,"nodeType":"577","messageId":"569","endLine":117,"endColumn":21},{"ruleId":"495","severity":1,"message":"513","line":32,"column":6,"nodeType":"497","endLine":32,"endColumn":8,"suggestions":"578"},{"ruleId":"495","severity":1,"message":"513","line":34,"column":6,"nodeType":"497","endLine":34,"endColumn":8,"suggestions":"579"},{"ruleId":"499","severity":1,"message":"580","line":22,"column":23,"nodeType":"501","messageId":"502","endLine":22,"endColumn":37},{"ruleId":"495","severity":1,"message":"513","line":44,"column":6,"nodeType":"497","endLine":44,"endColumn":8,"suggestions":"581"},{"ruleId":"570","severity":1,"message":"571","line":392,"column":29,"nodeType":"507","endLine":392,"endColumn":173},{"ruleId":"570","severity":1,"message":"571","line":411,"column":29,"nodeType":"507","endLine":411,"endColumn":175},{"ruleId":"499","severity":1,"message":"552","line":1,"column":38,"nodeType":"501","messageId":"502","endLine":1,"endColumn":44},{"ruleId":"499","severity":1,"message":"582","line":8,"column":27,"nodeType":"501","messageId":"502","endLine":8,"endColumn":36},{"ruleId":"499","severity":1,"message":"583","line":35,"column":10,"nodeType":"501","messageId":"502","endLine":35,"endColumn":15},{"ruleId":"499","severity":1,"message":"584","line":55,"column":9,"nodeType":"501","messageId":"502","endLine":55,"endColumn":16},{"ruleId":"495","severity":1,"message":"564","line":81,"column":6,"nodeType":"497","endLine":81,"endColumn":8,"suggestions":"585"},{"ruleId":"499","severity":1,"message":"586","line":83,"column":9,"nodeType":"501","messageId":"502","endLine":83,"endColumn":25},{"ruleId":"566","severity":1,"message":"567","line":87,"column":26,"nodeType":"568","messageId":"569","endLine":87,"endColumn":28},{"ruleId":"587","severity":1,"message":"588","line":296,"column":37,"nodeType":"589","messageId":"590","endLine":296,"endColumn":38,"suggestions":"591"},{"ruleId":"587","severity":1,"message":"592","line":296,"column":39,"nodeType":"589","messageId":"590","endLine":296,"endColumn":40,"suggestions":"593"},{"ruleId":"587","severity":1,"message":"594","line":296,"column":41,"nodeType":"589","messageId":"590","endLine":296,"endColumn":42,"suggestions":"595"},{"ruleId":"587","severity":1,"message":"596","line":296,"column":43,"nodeType":"589","messageId":"590","endLine":296,"endColumn":44,"suggestions":"597"},{"ruleId":"587","severity":1,"message":"598","line":296,"column":45,"nodeType":"589","messageId":"590","endLine":296,"endColumn":46,"suggestions":"599"},{"ruleId":"587","severity":1,"message":"600","line":296,"column":47,"nodeType":"589","messageId":"590","endLine":296,"endColumn":48,"suggestions":"601"},{"ruleId":"587","severity":1,"message":"602","line":296,"column":49,"nodeType":"589","messageId":"590","endLine":296,"endColumn":50,"suggestions":"603"},{"ruleId":"587","severity":1,"message":"604","line":296,"column":51,"nodeType":"589","messageId":"590","endLine":296,"endColumn":52,"suggestions":"605"},{"ruleId":"587","severity":1,"message":"588","line":303,"column":41,"nodeType":"589","messageId":"590","endLine":303,"endColumn":42,"suggestions":"606"},{"ruleId":"587","severity":1,"message":"592","line":303,"column":43,"nodeType":"589","messageId":"590","endLine":303,"endColumn":44,"suggestions":"607"},{"ruleId":"587","severity":1,"message":"594","line":303,"column":45,"nodeType":"589","messageId":"590","endLine":303,"endColumn":46,"suggestions":"608"},{"ruleId":"587","severity":1,"message":"596","line":303,"column":47,"nodeType":"589","messageId":"590","endLine":303,"endColumn":48,"suggestions":"609"},{"ruleId":"587","severity":1,"message":"598","line":303,"column":49,"nodeType":"589","messageId":"590","endLine":303,"endColumn":50,"suggestions":"610"},{"ruleId":"587","severity":1,"message":"600","line":303,"column":51,"nodeType":"589","messageId":"590","endLine":303,"endColumn":52,"suggestions":"611"},{"ruleId":"587","severity":1,"message":"602","line":303,"column":53,"nodeType":"589","messageId":"590","endLine":303,"endColumn":54,"suggestions":"612"},{"ruleId":"587","severity":1,"message":"604","line":303,"column":55,"nodeType":"589","messageId":"590","endLine":303,"endColumn":56,"suggestions":"613"},{"ruleId":"566","severity":1,"message":"567","line":310,"column":21,"nodeType":"568","messageId":"569","endLine":310,"endColumn":23},{"ruleId":"499","severity":1,"message":"614","line":319,"column":9,"nodeType":"501","messageId":"502","endLine":319,"endColumn":21},{"ruleId":"570","severity":1,"message":"571","line":375,"column":17,"nodeType":"507","endLine":375,"endColumn":62},{"ruleId":"587","severity":1,"message":"588","line":1,"column":76,"nodeType":"589","messageId":"590","endLine":1,"endColumn":77,"suggestions":"615"},{"ruleId":"587","severity":1,"message":"616","line":1,"column":97,"nodeType":"589","messageId":"590","endLine":1,"endColumn":98,"suggestions":"617"},{"ruleId":"587","severity":1,"message":"588","line":1,"column":123,"nodeType":"589","messageId":"590","endLine":1,"endColumn":124,"suggestions":"618"},{"ruleId":"587","severity":1,"message":"616","line":1,"column":144,"nodeType":"589","messageId":"590","endLine":1,"endColumn":145,"suggestions":"619"},{"ruleId":"499","severity":1,"message":"563","line":11,"column":11,"nodeType":"501","messageId":"502","endLine":11,"endColumn":18},{"ruleId":"575","severity":1,"message":"620","line":144,"column":5,"nodeType":"577","messageId":"569","endLine":144,"endColumn":16},{"ruleId":"575","severity":1,"message":"621","line":149,"column":3,"nodeType":"577","messageId":"569","endLine":149,"endColumn":9},{"ruleId":"575","severity":1,"message":"622","line":154,"column":3,"nodeType":"577","messageId":"569","endLine":154,"endColumn":14},{"ruleId":"499","severity":1,"message":"623","line":1,"column":46,"nodeType":"501","messageId":"502","endLine":1,"endColumn":57},{"ruleId":"499","severity":1,"message":"624","line":12,"column":27,"nodeType":"501","messageId":"502","endLine":12,"endColumn":35},{"ruleId":"499","severity":1,"message":"625","line":13,"column":10,"nodeType":"501","messageId":"502","endLine":13,"endColumn":19},{"ruleId":"499","severity":1,"message":"525","line":16,"column":10,"nodeType":"501","messageId":"502","endLine":16,"endColumn":20},{"ruleId":"499","severity":1,"message":"560","line":29,"column":77,"nodeType":"501","messageId":"502","endLine":29,"endColumn":99},{"ruleId":"499","severity":1,"message":"626","line":29,"column":101,"nodeType":"501","messageId":"502","endLine":29,"endColumn":115},{"ruleId":"499","severity":1,"message":"549","line":42,"column":9,"nodeType":"501","messageId":"502","endLine":42,"endColumn":14},{"ruleId":"499","severity":1,"message":"550","line":44,"column":9,"nodeType":"501","messageId":"502","endLine":44,"endColumn":17},{"ruleId":"499","severity":1,"message":"551","line":45,"column":9,"nodeType":"501","messageId":"502","endLine":45,"endColumn":19},{"ruleId":"495","severity":1,"message":"513","line":126,"column":6,"nodeType":"497","endLine":126,"endColumn":19,"suggestions":"627"},{"ruleId":"495","severity":1,"message":"513","line":142,"column":6,"nodeType":"497","endLine":142,"endColumn":8,"suggestions":"628"},{"ruleId":"566","severity":1,"message":"567","line":150,"column":14,"nodeType":"568","messageId":"569","endLine":150,"endColumn":16},{"ruleId":"629","severity":1,"message":"630","line":181,"column":9,"nodeType":"631","messageId":"632","endLine":181,"endColumn":66},{"ruleId":"505","severity":1,"message":"506","line":188,"column":11,"nodeType":"507","endLine":191,"endColumn":16},{"ruleId":"566","severity":1,"message":"567","line":198,"column":40,"nodeType":"568","messageId":"569","endLine":198,"endColumn":42},{"ruleId":"566","severity":1,"message":"567","line":199,"column":53,"nodeType":"568","messageId":"569","endLine":199,"endColumn":55},{"ruleId":"566","severity":1,"message":"567","line":229,"column":79,"nodeType":"568","messageId":"569","endLine":229,"endColumn":81},{"ruleId":"499","severity":1,"message":"633","line":2,"column":8,"nodeType":"501","messageId":"502","endLine":2,"endColumn":18},{"ruleId":"499","severity":1,"message":"634","line":3,"column":8,"nodeType":"501","messageId":"502","endLine":3,"endColumn":22},{"ruleId":"499","severity":1,"message":"519","line":4,"column":8,"nodeType":"501","messageId":"502","endLine":4,"endColumn":13},{"ruleId":"499","severity":1,"message":"635","line":11,"column":12,"nodeType":"501","messageId":"502","endLine":11,"endColumn":19},{"ruleId":"575","severity":1,"message":"620","line":86,"column":5,"nodeType":"577","messageId":"569","endLine":86,"endColumn":16},{"ruleId":"499","severity":1,"message":"636","line":2,"column":8,"nodeType":"501","messageId":"502","endLine":2,"endColumn":12},{"ruleId":"499","severity":1,"message":"637","line":3,"column":20,"nodeType":"501","messageId":"502","endLine":3,"endColumn":28},{"ruleId":"499","severity":1,"message":"636","line":2,"column":8,"nodeType":"501","messageId":"502","endLine":2,"endColumn":12},{"ruleId":"499","severity":1,"message":"638","line":6,"column":9,"nodeType":"501","messageId":"502","endLine":6,"endColumn":19},{"ruleId":"499","severity":1,"message":"512","line":10,"column":8,"nodeType":"501","messageId":"502","endLine":10,"endColumn":10},{"ruleId":"499","severity":1,"message":"525","line":3,"column":5,"nodeType":"501","messageId":"502","endLine":3,"endColumn":15},{"ruleId":"499","severity":1,"message":"639","line":2,"column":8,"nodeType":"501","messageId":"502","endLine":2,"endColumn":17},{"ruleId":"499","severity":1,"message":"503","line":9,"column":10,"nodeType":"501","messageId":"502","endLine":9,"endColumn":14},{"ruleId":"499","severity":1,"message":"640","line":17,"column":8,"nodeType":"501","messageId":"502","endLine":17,"endColumn":19},{"ruleId":"499","severity":1,"message":"545","line":19,"column":10,"nodeType":"501","messageId":"502","endLine":19,"endColumn":21},{"ruleId":"499","severity":1,"message":"641","line":20,"column":38,"nodeType":"501","messageId":"502","endLine":20,"endColumn":74},{"ruleId":"566","severity":1,"message":"567","line":88,"column":32,"nodeType":"568","messageId":"569","endLine":88,"endColumn":34},{"ruleId":"570","severity":1,"message":"571","line":90,"column":13,"nodeType":"507","endLine":90,"endColumn":81},{"ruleId":"566","severity":1,"message":"567","line":93,"column":20,"nodeType":"568","messageId":"569","endLine":93,"endColumn":22},{"ruleId":"499","severity":1,"message":"500","line":2,"column":17,"nodeType":"501","messageId":"502","endLine":2,"endColumn":25},{"ruleId":"499","severity":1,"message":"642","line":2,"column":27,"nodeType":"501","messageId":"502","endLine":2,"endColumn":36},{"ruleId":"499","severity":1,"message":"552","line":2,"column":38,"nodeType":"501","messageId":"502","endLine":2,"endColumn":44},{"ruleId":"499","severity":1,"message":"643","line":9,"column":19,"nodeType":"501","messageId":"502","endLine":9,"endColumn":28},{"ruleId":"499","severity":1,"message":"546","line":19,"column":10,"nodeType":"501","messageId":"502","endLine":19,"endColumn":37},{"ruleId":"499","severity":1,"message":"644","line":38,"column":9,"nodeType":"501","messageId":"502","endLine":38,"endColumn":26},"no-native-reassign",["645"],"no-negated-in-lhs",["646"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["647"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Navbar' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'loginInitiate' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.",["648"],"'BottomNavigation' is defined but never used.","'cl' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["649"],"'progress' is assigned a value but never used.","'moment' is defined but never used.","'RouterLink' is defined but never used.","'Breadcrumb' is defined but never used.","'Input' is defined but never used.","'Table' is defined but never used.","'Space' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'makeStyles' is defined but never used.","'Drawer' is defined but never used.","'Paper' is defined but never used.","'CssBaseline' is defined but never used.","'List' is defined but never used.","'Box' is defined but never used.","'Select' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","'ListItem' is defined but never used.","'Collapse' is defined but never used.","'Breadcrumbs' is defined but never used.","'ListItemText' is defined but never used.","'ListItemIcon' is defined but never used.","'Button' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faChevronDown' is defined but never used.","'AppImages' is defined but never used.","'Colors' is defined but never used.","'ValidationConstants' is defined but never used.","'useSelector' is defined but never used.","'handleNavigationStateAction' is defined but never used.","'userDetailInitiate' is defined but never used.","'userDetailUpdateInitiate' is defined but never used.","'theme' is assigned a value but never used.","'location' is assigned a value but never used.","'tabItemRef' is assigned a value but never used.","'useRef' is defined but never used.","'useHistory' is defined but never used.","'CalendarTodaySharpIcon' is defined but never used.","'DateRangeSharpIcon' is defined but never used.","'CalendarMonthSharpIcon' is defined but never used.","'EventRepeatSharpIcon' is defined but never used.","'TodaySharpIcon' is defined but never used.","'InsertInvitationSharpIcon' is defined but never used.","'handleClearStateAction' is defined but never used.",["650"],"'PaginationBar' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'payload'. Either include them or remove the dependency array.",["651"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["652"],"'userBlockInitiate' is defined but never used.",["653"],"no-dupe-keys","Duplicate key 'ellipsis'.","ObjectExpression",["654"],["655"],"'setImageValue3' is assigned a value but never used.",["656"],"'AntButton' is defined but never used.","'toast' is defined but never used.","'baseUrl' is assigned a value but never used.",["657"],"'handlePagination' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["658","659"],"Unnecessary escape character: \\*.",["660","661"],"Unnecessary escape character: \\|.",["662","663"],"Unnecessary escape character: \\:.",["664","665"],"Unnecessary escape character: \\<.",["666","667"],"Unnecessary escape character: \\>.",["668","669"],"Unnecessary escape character: \\?.",["670","671"],"Unnecessary escape character: \\\".",["672","673"],["674","675"],["676","677"],["678","679"],["680","681"],["682","683"],["684","685"],["686","687"],["688","689"],"'handleCancel' is assigned a value but never used.",["690","691"],"Unnecessary escape character: \\[.",["692","693"],["694","695"],["696","697"],"Duplicate key 'marginRight'.","Duplicate key 'drawer'.","Duplicate key 'drawerPaper'.","'useCallback' is defined but never used.","'faTrophy' is defined but never used.","'faCompass' is defined but never used.","'logoutInitiate' is defined but never used.",["698"],["699"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","'options' is assigned a value but never used.","'clsx' is defined but never used.","'BsNavbar' is defined but never used.","'Pagination' is defined but never used.","'PropTypes' is defined but never used.","'routeConfig' is defined but never used.","'handleSidebarDrawerToggleStateAction' is defined but never used.","'useEffect' is defined but never used.","'isWidthUp' is defined but never used.","'handleDrawerClose' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"700","fix":"701"},{"desc":"702","fix":"703"},{"desc":"704","fix":"705"},{"desc":"704","fix":"706"},{"desc":"707","fix":"708"},{"desc":"707","fix":"709"},{"desc":"707","fix":"710"},{"desc":"704","fix":"711"},{"desc":"704","fix":"712"},{"desc":"704","fix":"713"},{"desc":"707","fix":"714"},{"messageId":"715","fix":"716","desc":"717"},{"messageId":"718","fix":"719","desc":"720"},{"messageId":"715","fix":"721","desc":"717"},{"messageId":"718","fix":"722","desc":"720"},{"messageId":"715","fix":"723","desc":"717"},{"messageId":"718","fix":"724","desc":"720"},{"messageId":"715","fix":"725","desc":"717"},{"messageId":"718","fix":"726","desc":"720"},{"messageId":"715","fix":"727","desc":"717"},{"messageId":"718","fix":"728","desc":"720"},{"messageId":"715","fix":"729","desc":"717"},{"messageId":"718","fix":"730","desc":"720"},{"messageId":"715","fix":"731","desc":"717"},{"messageId":"718","fix":"732","desc":"720"},{"messageId":"715","fix":"733","desc":"717"},{"messageId":"718","fix":"734","desc":"720"},{"messageId":"715","fix":"735","desc":"717"},{"messageId":"718","fix":"736","desc":"720"},{"messageId":"715","fix":"737","desc":"717"},{"messageId":"718","fix":"738","desc":"720"},{"messageId":"715","fix":"739","desc":"717"},{"messageId":"718","fix":"740","desc":"720"},{"messageId":"715","fix":"741","desc":"717"},{"messageId":"718","fix":"742","desc":"720"},{"messageId":"715","fix":"743","desc":"717"},{"messageId":"718","fix":"744","desc":"720"},{"messageId":"715","fix":"745","desc":"717"},{"messageId":"718","fix":"746","desc":"720"},{"messageId":"715","fix":"747","desc":"717"},{"messageId":"718","fix":"748","desc":"720"},{"messageId":"715","fix":"749","desc":"717"},{"messageId":"718","fix":"750","desc":"720"},{"messageId":"715","fix":"751","desc":"717"},{"messageId":"718","fix":"752","desc":"720"},{"messageId":"715","fix":"753","desc":"717"},{"messageId":"718","fix":"754","desc":"720"},{"messageId":"715","fix":"755","desc":"717"},{"messageId":"718","fix":"756","desc":"720"},{"messageId":"715","fix":"757","desc":"717"},{"messageId":"718","fix":"758","desc":"720"},{"desc":"759","fix":"760"},{"desc":"704","fix":"761"},"Update the dependencies array to be: [history]",{"range":"762","text":"763"},"Update the dependencies array to be: [dispatch, token]",{"range":"764","text":"765"},"Update the dependencies array to be: [dispatch]",{"range":"766","text":"767"},{"range":"768","text":"767"},"Update the dependencies array to be: [dispatch, payload]",{"range":"769","text":"770"},{"range":"771","text":"770"},{"range":"772","text":"770"},{"range":"773","text":"767"},{"range":"774","text":"767"},{"range":"775","text":"767"},{"range":"776","text":"770"},"removeEscape",{"range":"777","text":"778"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"779","text":"780"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"781","text":"778"},{"range":"782","text":"780"},{"range":"783","text":"778"},{"range":"784","text":"780"},{"range":"785","text":"778"},{"range":"786","text":"780"},{"range":"787","text":"778"},{"range":"788","text":"780"},{"range":"789","text":"778"},{"range":"790","text":"780"},{"range":"791","text":"778"},{"range":"792","text":"780"},{"range":"793","text":"778"},{"range":"794","text":"780"},{"range":"795","text":"778"},{"range":"796","text":"780"},{"range":"797","text":"778"},{"range":"798","text":"780"},{"range":"799","text":"778"},{"range":"800","text":"780"},{"range":"801","text":"778"},{"range":"802","text":"780"},{"range":"803","text":"778"},{"range":"804","text":"780"},{"range":"805","text":"778"},{"range":"806","text":"780"},{"range":"807","text":"778"},{"range":"808","text":"780"},{"range":"809","text":"778"},{"range":"810","text":"780"},{"range":"811","text":"778"},{"range":"812","text":"780"},{"range":"813","text":"778"},{"range":"814","text":"780"},{"range":"815","text":"778"},{"range":"816","text":"780"},{"range":"817","text":"778"},{"range":"818","text":"780"},"Update the dependencies array to be: [dispatch, props.width]",{"range":"819","text":"820"},{"range":"821","text":"767"},[694,696],"[history]",[1576,1578],"[dispatch, token]",[1225,1227],"[dispatch]",[3791,3793],[2078,2080],"[dispatch, payload]",[2022,2024],[1720,1722],[1283,1285],[1274,1276],[2200,2202],[2341,2343],[7446,7447],"",[7446,7446],"\\",[7448,7449],[7448,7448],[7450,7451],[7450,7450],[7452,7453],[7452,7452],[7454,7455],[7454,7454],[7456,7457],[7456,7456],[7458,7459],[7458,7458],[7460,7461],[7460,7460],[7794,7795],[7794,7794],[7796,7797],[7796,7796],[7798,7799],[7798,7798],[7800,7801],[7800,7800],[7802,7803],[7802,7802],[7804,7805],[7804,7804],[7806,7807],[7806,7806],[7808,7809],[7808,7808],[75,76],[75,75],[96,97],[96,96],[122,123],[122,122],[143,144],[143,143],[3624,3637],"[dispatch, props.width]",[4182,4184]]